/*
 * Public API Surface of ngx-mapbox-gl
 */
// Expose NgxMapboxGlModule and GeocoderControlDirective provided injection tokens
export * from './lib/control/attribution-control.directive';
// Expose control component to allow custom directives
export * from './lib/control/control.component';
export * from './lib/control/fullscreen-control.directive';
export * from './lib/control/geolocate-control.directive';
export * from './lib/control/navigation-control.directive';
export * from './lib/control/scale-control.directive';
export * from './lib/draggable/draggable.directive';
export * from './lib/image/image.component';
export * from './lib/layer/layer.component';
export * from './lib/map/map.component';
// Expose MapService for ngx-mapbox-gl extensions
export * from './lib/map/map.service';
export * from './lib/map/map.types';
export * from './lib/marker/marker.component';
export * from './lib/markers-for-clusters/markers-for-clusters.component';
export * from './lib/ngx-mapbox-gl.module';
export * from './lib/popup/popup.component';
export * from './lib/source/canvas-source.component';
export * from './lib/source/geojson/feature.component';
// Expose GeoJSONSourceComponent to access cluster functions
export * from './lib/source/geojson/geojson-source.component';
export * from './lib/source/image-source.component';
export * from './lib/source/raster-dem-source.component';
export * from './lib/source/raster-source.component';
export * from './lib/source/vector-source.component';
export * from './lib/source/video-source.component';
// Expose deprecation warning
export * from './lib/utils';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9saWJzL25neC1tYXBib3gtZ2wvc3JjL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztHQUVHO0FBRUgsa0ZBQWtGO0FBQ2xGLGNBQWMsNkNBQTZDLENBQUM7QUFDNUQsc0RBQXNEO0FBQ3RELGNBQWMsaUNBQWlDLENBQUM7QUFDaEQsY0FBYyw0Q0FBNEMsQ0FBQztBQUMzRCxjQUFjLDJDQUEyQyxDQUFDO0FBQzFELGNBQWMsNENBQTRDLENBQUM7QUFDM0QsY0FBYyx1Q0FBdUMsQ0FBQztBQUN0RCxjQUFjLHFDQUFxQyxDQUFDO0FBQ3BELGNBQWMsNkJBQTZCLENBQUM7QUFDNUMsY0FBYyw2QkFBNkIsQ0FBQztBQUM1QyxjQUFjLHlCQUF5QixDQUFDO0FBQ3hDLGlEQUFpRDtBQUNqRCxjQUFjLHVCQUF1QixDQUFDO0FBQ3RDLGNBQWMscUJBQXFCLENBQUM7QUFDcEMsY0FBYywrQkFBK0IsQ0FBQztBQUM5QyxjQUFjLDJEQUEyRCxDQUFDO0FBQzFFLGNBQWMsNEJBQTRCLENBQUM7QUFDM0MsY0FBYyw2QkFBNkIsQ0FBQztBQUM1QyxjQUFjLHNDQUFzQyxDQUFDO0FBQ3JELGNBQWMsd0NBQXdDLENBQUM7QUFDdkQsNERBQTREO0FBQzVELGNBQWMsK0NBQStDLENBQUM7QUFDOUQsY0FBYyxxQ0FBcUMsQ0FBQztBQUNwRCxjQUFjLDBDQUEwQyxDQUFDO0FBQ3pELGNBQWMsc0NBQXNDLENBQUM7QUFDckQsY0FBYyxzQ0FBc0MsQ0FBQztBQUNyRCxjQUFjLHFDQUFxQyxDQUFDO0FBQ3BELDZCQUE2QjtBQUM3QixjQUFjLGFBQWEsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBQdWJsaWMgQVBJIFN1cmZhY2Ugb2Ygbmd4LW1hcGJveC1nbFxuICovXG5cbi8vIEV4cG9zZSBOZ3hNYXBib3hHbE1vZHVsZSBhbmQgR2VvY29kZXJDb250cm9sRGlyZWN0aXZlIHByb3ZpZGVkIGluamVjdGlvbiB0b2tlbnNcbmV4cG9ydCAqIGZyb20gJy4vbGliL2NvbnRyb2wvYXR0cmlidXRpb24tY29udHJvbC5kaXJlY3RpdmUnO1xuLy8gRXhwb3NlIGNvbnRyb2wgY29tcG9uZW50IHRvIGFsbG93IGN1c3RvbSBkaXJlY3RpdmVzXG5leHBvcnQgKiBmcm9tICcuL2xpYi9jb250cm9sL2NvbnRyb2wuY29tcG9uZW50JztcbmV4cG9ydCAqIGZyb20gJy4vbGliL2NvbnRyb2wvZnVsbHNjcmVlbi1jb250cm9sLmRpcmVjdGl2ZSc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9jb250cm9sL2dlb2xvY2F0ZS1jb250cm9sLmRpcmVjdGl2ZSc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9jb250cm9sL25hdmlnYXRpb24tY29udHJvbC5kaXJlY3RpdmUnO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvY29udHJvbC9zY2FsZS1jb250cm9sLmRpcmVjdGl2ZSc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9kcmFnZ2FibGUvZHJhZ2dhYmxlLmRpcmVjdGl2ZSc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9pbWFnZS9pbWFnZS5jb21wb25lbnQnO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvbGF5ZXIvbGF5ZXIuY29tcG9uZW50JztcbmV4cG9ydCAqIGZyb20gJy4vbGliL21hcC9tYXAuY29tcG9uZW50Jztcbi8vIEV4cG9zZSBNYXBTZXJ2aWNlIGZvciBuZ3gtbWFwYm94LWdsIGV4dGVuc2lvbnNcbmV4cG9ydCAqIGZyb20gJy4vbGliL21hcC9tYXAuc2VydmljZSc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9tYXAvbWFwLnR5cGVzJztcbmV4cG9ydCAqIGZyb20gJy4vbGliL21hcmtlci9tYXJrZXIuY29tcG9uZW50JztcbmV4cG9ydCAqIGZyb20gJy4vbGliL21hcmtlcnMtZm9yLWNsdXN0ZXJzL21hcmtlcnMtZm9yLWNsdXN0ZXJzLmNvbXBvbmVudCc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9uZ3gtbWFwYm94LWdsLm1vZHVsZSc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9wb3B1cC9wb3B1cC5jb21wb25lbnQnO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvc291cmNlL2NhbnZhcy1zb3VyY2UuY29tcG9uZW50JztcbmV4cG9ydCAqIGZyb20gJy4vbGliL3NvdXJjZS9nZW9qc29uL2ZlYXR1cmUuY29tcG9uZW50Jztcbi8vIEV4cG9zZSBHZW9KU09OU291cmNlQ29tcG9uZW50IHRvIGFjY2VzcyBjbHVzdGVyIGZ1bmN0aW9uc1xuZXhwb3J0ICogZnJvbSAnLi9saWIvc291cmNlL2dlb2pzb24vZ2VvanNvbi1zb3VyY2UuY29tcG9uZW50JztcbmV4cG9ydCAqIGZyb20gJy4vbGliL3NvdXJjZS9pbWFnZS1zb3VyY2UuY29tcG9uZW50JztcbmV4cG9ydCAqIGZyb20gJy4vbGliL3NvdXJjZS9yYXN0ZXItZGVtLXNvdXJjZS5jb21wb25lbnQnO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvc291cmNlL3Jhc3Rlci1zb3VyY2UuY29tcG9uZW50JztcbmV4cG9ydCAqIGZyb20gJy4vbGliL3NvdXJjZS92ZWN0b3Itc291cmNlLmNvbXBvbmVudCc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9zb3VyY2UvdmlkZW8tc291cmNlLmNvbXBvbmVudCc7XG4vLyBFeHBvc2UgZGVwcmVjYXRpb24gd2FybmluZ1xuZXhwb3J0ICogZnJvbSAnLi9saWIvdXRpbHMnO1xuIl19