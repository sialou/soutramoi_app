import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { AttributionControlDirective } from './control/attribution-control.directive';
import { ControlComponent } from './control/control.component';
import { FullscreenControlDirective } from './control/fullscreen-control.directive';
import { GeolocateControlDirective } from './control/geolocate-control.directive';
import { NavigationControlDirective } from './control/navigation-control.directive';
import { ScaleControlDirective } from './control/scale-control.directive';
import { DraggableDirective } from './draggable/draggable.directive';
import { ImageComponent } from './image/image.component';
import { LayerComponent } from './layer/layer.component';
import { MapComponent } from './map/map.component';
import { MAPBOX_API_KEY } from './map/map.service';
import { MarkerComponent } from './marker/marker.component';
import { ClusterPointDirective, MarkersForClustersComponent, PointDirective, } from './markers-for-clusters/markers-for-clusters.component';
import { PopupComponent } from './popup/popup.component';
import { CanvasSourceComponent } from './source/canvas-source.component';
import { FeatureComponent } from './source/geojson/feature.component';
import { GeoJSONSourceComponent } from './source/geojson/geojson-source.component';
import { ImageSourceComponent } from './source/image-source.component';
import { RasterDemSourceComponent } from './source/raster-dem-source.component';
import { RasterSourceComponent } from './source/raster-source.component';
import { VectorSourceComponent } from './source/vector-source.component';
import { VideoSourceComponent } from './source/video-source.component';
import * as i0 from "@angular/core";
export class NgxMapboxGLModule {
    static withConfig(config) {
        return {
            ngModule: NgxMapboxGLModule,
            providers: [
                {
                    provide: MAPBOX_API_KEY,
                    useValue: config.accessToken,
                },
            ],
        };
    }
}
NgxMapboxGLModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.1.1", ngImport: i0, type: NgxMapboxGLModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NgxMapboxGLModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "14.1.1", ngImport: i0, type: NgxMapboxGLModule, declarations: [MapComponent,
        LayerComponent,
        DraggableDirective,
        ImageComponent,
        VectorSourceComponent,
        GeoJSONSourceComponent,
        RasterDemSourceComponent,
        RasterSourceComponent,
        ImageSourceComponent,
        VideoSourceComponent,
        CanvasSourceComponent,
        FeatureComponent,
        MarkerComponent,
        PopupComponent,
        ControlComponent,
        FullscreenControlDirective,
        NavigationControlDirective,
        GeolocateControlDirective,
        AttributionControlDirective,
        ScaleControlDirective,
        PointDirective,
        ClusterPointDirective,
        MarkersForClustersComponent], imports: [CommonModule], exports: [MapComponent,
        LayerComponent,
        DraggableDirective,
        ImageComponent,
        VectorSourceComponent,
        GeoJSONSourceComponent,
        RasterDemSourceComponent,
        RasterSourceComponent,
        ImageSourceComponent,
        VideoSourceComponent,
        CanvasSourceComponent,
        FeatureComponent,
        MarkerComponent,
        PopupComponent,
        ControlComponent,
        FullscreenControlDirective,
        NavigationControlDirective,
        GeolocateControlDirective,
        AttributionControlDirective,
        ScaleControlDirective,
        PointDirective,
        ClusterPointDirective,
        MarkersForClustersComponent] });
NgxMapboxGLModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "14.1.1", ngImport: i0, type: NgxMapboxGLModule, imports: [CommonModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.1.1", ngImport: i0, type: NgxMapboxGLModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule],
                    declarations: [
                        MapComponent,
                        LayerComponent,
                        DraggableDirective,
                        ImageComponent,
                        VectorSourceComponent,
                        GeoJSONSourceComponent,
                        RasterDemSourceComponent,
                        RasterSourceComponent,
                        ImageSourceComponent,
                        VideoSourceComponent,
                        CanvasSourceComponent,
                        FeatureComponent,
                        MarkerComponent,
                        PopupComponent,
                        ControlComponent,
                        FullscreenControlDirective,
                        NavigationControlDirective,
                        GeolocateControlDirective,
                        AttributionControlDirective,
                        ScaleControlDirective,
                        PointDirective,
                        ClusterPointDirective,
                        MarkersForClustersComponent,
                    ],
                    exports: [
                        MapComponent,
                        LayerComponent,
                        DraggableDirective,
                        ImageComponent,
                        VectorSourceComponent,
                        GeoJSONSourceComponent,
                        RasterDemSourceComponent,
                        RasterSourceComponent,
                        ImageSourceComponent,
                        VideoSourceComponent,
                        CanvasSourceComponent,
                        FeatureComponent,
                        MarkerComponent,
                        PopupComponent,
                        ControlComponent,
                        FullscreenControlDirective,
                        NavigationControlDirective,
                        GeolocateControlDirective,
                        AttributionControlDirective,
                        ScaleControlDirective,
                        PointDirective,
                        ClusterPointDirective,
                        MarkersForClustersComponent,
                    ],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,