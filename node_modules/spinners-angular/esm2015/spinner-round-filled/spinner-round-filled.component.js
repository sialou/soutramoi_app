import { Component } from '@angular/core';
import { SpinnerComponent } from 'spinners-angular/spinners-utils';
export class SpinnerRoundFilledComponent extends SpinnerComponent {
    constructor() {
        super(...arguments);
        this.animations = [
            { r: 4 },
            {
                name: 'spinners-angular-round-filled-inner',
                r: 12.66,
            },
            {
                name: 'spinners-angular-round-filled-center',
                r: 20.32,
            },
            {
                name: 'spinners-angular-round-filled-outer',
                r: 27.5,
            },
        ];
    }
    circleStyle(animation) {
        return {
            opacity: animation.name ? 0.25 : 1,
            transformOrigin: 'center',
            animation: (!animation.name || this.still)
                ? 'none'
                : `${animation.name} ${140 / this.speed}s ease-in-out infinite`,
        };
    }
    radius(animation) {
        return animation.r * (animation.name ? (this.thickness / 100) : 1);
    }
}
SpinnerRoundFilledComponent.decorators = [
    { type: Component, args: [{
                selector: 'sa-spinner-round-filled',
                template: "<svg *ngIf=\"enabled\" fill=\"none\" [ngStyle]=\"svgStyle\" viewBox=\"0 0 66 66\">\r\n  <circle\r\n    *ngFor=\"let animation of animations\"\r\n    cx=\"33\"\r\n    cy=\"33\"\r\n    fill=\"currentColor\"\r\n    [attr.r]=\"radius(animation)\"\r\n    [ngStyle]=\"circleStyle(animation)\"\r\n  />\r\n</svg>\r\n",
                styles: ["@-webkit-keyframes spinners-angular-round-filled-outer{40%,60%{transform:scale(0)}}@keyframes spinners-angular-round-filled-outer{40%,60%{transform:scale(0)}}@-webkit-keyframes spinners-angular-round-filled-center{30%,70%{transform:scale(0)}}@keyframes spinners-angular-round-filled-center{30%,70%{transform:scale(0)}}@-webkit-keyframes spinners-angular-round-filled-inner{20%,80%{transform:scale(0)}}@keyframes spinners-angular-round-filled-inner{20%,80%{transform:scale(0)}}\n"]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3Bpbm5lci1yb3VuZC1maWxsZWQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vcHJvamVjdHMvc3Bpbm5lcnMtYW5ndWxhci9zcGlubmVyLXJvdW5kLWZpbGxlZC9zcmMvc3Bpbm5lci1yb3VuZC1maWxsZWQuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDMUMsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFPbkUsTUFBTSxPQUFPLDJCQUE0QixTQUFRLGdCQUFnQjtJQUxqRTs7UUFNRSxlQUFVLEdBQUc7WUFDVCxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7WUFDUjtnQkFDSSxJQUFJLEVBQUUscUNBQXFDO2dCQUMzQyxDQUFDLEVBQUUsS0FBSzthQUNYO1lBQ0Q7Z0JBQ0ksSUFBSSxFQUFFLHNDQUFzQztnQkFDNUMsQ0FBQyxFQUFFLEtBQUs7YUFDWDtZQUNEO2dCQUNJLElBQUksRUFBRSxxQ0FBcUM7Z0JBQzNDLENBQUMsRUFBRSxJQUFJO2FBQ1Y7U0FDSixDQUFDO0lBZUosQ0FBQztJQWJDLFdBQVcsQ0FBQyxTQUFTO1FBQ2pCLE9BQU87WUFDSCxPQUFPLEVBQUUsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ2xDLGVBQWUsRUFBRSxRQUFRO1lBQ3pCLFNBQVMsRUFBRSxDQUFDLENBQUMsU0FBUyxDQUFDLElBQUksSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDO2dCQUN0QyxDQUFDLENBQUMsTUFBTTtnQkFDUixDQUFDLENBQUMsR0FBRyxTQUFTLENBQUMsSUFBSSxJQUFJLEdBQUcsR0FBRyxJQUFJLENBQUMsS0FBSyx3QkFBd0I7U0FDdEUsQ0FBQztJQUNOLENBQUM7SUFFRCxNQUFNLENBQUMsU0FBUztRQUNaLE9BQU8sU0FBUyxDQUFDLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDdkUsQ0FBQzs7O1lBbENGLFNBQVMsU0FBQztnQkFDUCxRQUFRLEVBQUUseUJBQXlCO2dCQUNuQyxnVUFBb0Q7O2FBRXZEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFNwaW5uZXJDb21wb25lbnQgfSBmcm9tICdzcGlubmVycy1hbmd1bGFyL3NwaW5uZXJzLXV0aWxzJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gICAgc2VsZWN0b3I6ICdzYS1zcGlubmVyLXJvdW5kLWZpbGxlZCcsXHJcbiAgICB0ZW1wbGF0ZVVybDogJy4vc3Bpbm5lci1yb3VuZC1maWxsZWQuY29tcG9uZW50Lmh0bWwnLFxyXG4gICAgc3R5bGVVcmxzOiBbJy4vc3Bpbm5lci1yb3VuZC1maWxsZWQuY29tcG9uZW50LmNzcyddLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgU3Bpbm5lclJvdW5kRmlsbGVkQ29tcG9uZW50IGV4dGVuZHMgU3Bpbm5lckNvbXBvbmVudCB7XHJcbiAgYW5pbWF0aW9ucyA9IFtcclxuICAgICAgeyByOiA0IH0sXHJcbiAgICAgIHtcclxuICAgICAgICAgIG5hbWU6ICdzcGlubmVycy1hbmd1bGFyLXJvdW5kLWZpbGxlZC1pbm5lcicsXHJcbiAgICAgICAgICByOiAxMi42NixcclxuICAgICAgfSxcclxuICAgICAge1xyXG4gICAgICAgICAgbmFtZTogJ3NwaW5uZXJzLWFuZ3VsYXItcm91bmQtZmlsbGVkLWNlbnRlcicsXHJcbiAgICAgICAgICByOiAyMC4zMixcclxuICAgICAgfSxcclxuICAgICAge1xyXG4gICAgICAgICAgbmFtZTogJ3NwaW5uZXJzLWFuZ3VsYXItcm91bmQtZmlsbGVkLW91dGVyJyxcclxuICAgICAgICAgIHI6IDI3LjUsXHJcbiAgICAgIH0sXHJcbiAgXTtcclxuXHJcbiAgY2lyY2xlU3R5bGUoYW5pbWF0aW9uKSB7XHJcbiAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICBvcGFjaXR5OiBhbmltYXRpb24ubmFtZSA/IDAuMjUgOiAxLFxyXG4gICAgICAgICAgdHJhbnNmb3JtT3JpZ2luOiAnY2VudGVyJyxcclxuICAgICAgICAgIGFuaW1hdGlvbjogKCFhbmltYXRpb24ubmFtZSB8fCB0aGlzLnN0aWxsKVxyXG4gICAgICAgICAgICAgID8gJ25vbmUnXHJcbiAgICAgICAgICAgICAgOiBgJHthbmltYXRpb24ubmFtZX0gJHsxNDAgLyB0aGlzLnNwZWVkfXMgZWFzZS1pbi1vdXQgaW5maW5pdGVgLFxyXG4gICAgICB9O1xyXG4gIH1cclxuXHJcbiAgcmFkaXVzKGFuaW1hdGlvbikge1xyXG4gICAgICByZXR1cm4gYW5pbWF0aW9uLnIgKiAoYW5pbWF0aW9uLm5hbWUgPyAodGhpcy50aGlja25lc3MgLyAxMDApIDogMSk7XHJcbiAgfVxyXG59XHJcbiJdfQ==