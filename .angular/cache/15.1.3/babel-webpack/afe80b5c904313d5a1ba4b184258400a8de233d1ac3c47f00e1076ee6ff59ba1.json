{"ast":null,"code":"import { __awaiter, __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./register-next.page.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./register-next.page.scss?ngResource\";\nimport { Component, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { capitalize } from 'src/app/helpers';\nimport { locations } from 'src/app/helpers/locations';\nimport { AlertService } from 'src/app/services/alert.service';\nimport { AppService } from 'src/app/services/app.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { LoaderService } from 'src/app/services/loader.service';\nimport { StorageService } from 'src/app/services/storage.service';\nlet RegisterNextPage = class RegisterNextPage {\n  constructor(router, app, auth, alert, loader, storage) {\n    this.router = router;\n    this.app = app;\n    this.auth = auth;\n    this.alert = alert;\n    this.loader = loader;\n    this.storage = storage;\n    this.cityOptions = [];\n    this.townOptions = [];\n    this.subscriptions = [];\n    Object.keys(locations).forEach(value => {\n      this.cityOptions.push({\n        name: capitalize(value).trim(),\n        value: value.trim().toLowerCase()\n      });\n    });\n    this.form = new FormGroup({\n      city: new FormControl(null, [Validators.required]),\n      town: new FormControl(null, [Validators.required])\n    });\n  }\n  ionViewDidEnter() {\n    const sub = this.form.controls.city.valueChanges.subscribe(value => {\n      this.townOptions = value ? locations[`${value}`] : [];\n    });\n    this.subscriptions.push(sub);\n  }\n  ionViewWillLeave() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n  onSubmit() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this.form.controls.city.valid) {\n        this.alert.present('Veuillez choisir une ville.');\n        return;\n      }\n      if (!this.form.controls.town.valid) {\n        this.alert.present('Veuillez choisir une commune.');\n        return;\n      }\n      yield this.loader.present('Inscription...');\n      const cityId = this.form.value.city;\n      const townId = this.form.value.town;\n      const {\n        name,\n        email,\n        phone,\n        password\n      } = yield this.storage.get('soutramoi_tmp_register');\n      const anonym = this.auth.currentUser();\n      const anonymUid = anonym ? anonym.uid : null;\n      const payload = {\n        email,\n        phone,\n        password,\n        name,\n        cityId,\n        townId\n      };\n      if (anonymUid) {\n        payload.anonymUid = anonymUid;\n      }\n      this.auth.register(payload).then(user => __awaiter(this, void 0, void 0, function* () {\n        yield this.auth.setUser(user);\n        yield this.loader.dismiss();\n        yield this.router.navigate(['/tabs/profile']);\n      })).catch(err => this.app.handlingError(err)).finally(() => {\n        this.storage.remove('soutramoi_tmp_register');\n      });\n    });\n  }\n  presentModal() {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.modal.present();\n    });\n  }\n  dismissModal() {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.modal.dismiss();\n    });\n  }\n};\nRegisterNextPage.ctorParameters = () => [{\n  type: Router\n}, {\n  type: AppService\n}, {\n  type: AuthService\n}, {\n  type: AlertService\n}, {\n  type: LoaderService\n}, {\n  type: StorageService\n}];\nRegisterNextPage.propDecorators = {\n  modal: [{\n    type: ViewChild,\n    args: ['modalEnd']\n  }]\n};\nRegisterNextPage = __decorate([Component({\n  selector: 'app-register-next',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], RegisterNextPage);\nexport { RegisterNextPage };","map":{"version":3,"mappings":"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","names":["Component","ViewChild","FormControl","FormGroup","Validators","Router","capitalize","locations","AlertService","AppService","AuthService","LoaderService","StorageService","RegisterNextPage","constructor","router","app","auth","alert","loader","storage","Object","keys","forEach","value","cityOptions","push","name","trim","toLowerCase","form","city","required","town","ionViewDidEnter","sub","controls","valueChanges","subscribe","townOptions","subscriptions","ionViewWillLeave","unsubscribe","onSubmit","valid","present","cityId","townId","email","phone","password","get","anonym","currentUser","anonymUid","uid","payload","register","then","user","__awaiter","setUser","dismiss","navigate","catch","err","handlingError","finally","remove","presentModal","modal","dismissModal","args","selector","template"],"sourceRoot":"","sources":["/home/digifemmes-22lab149/Bureau/soutramoi_app/src/app/pages/auth/register-next/register-next.page.ts"],"sourcesContent":["import { Component, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { IonModal } from '@ionic/angular';\nimport { Subscription } from 'rxjs';\n\nimport { capitalize } from 'src/app/helpers';\nimport { locations } from 'src/app/helpers/locations';\nimport { AlertService } from 'src/app/services/alert.service';\nimport { AppService } from 'src/app/services/app.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { LoaderService } from 'src/app/services/loader.service';\nimport { StorageService } from 'src/app/services/storage.service';\n\ninterface TmpUser {\n  name: string;\n  phone: string;\n  email: string;\n  password: string;\n}\n\n@Component({\n  selector: 'app-register-next',\n  templateUrl: './register-next.page.html',\n  styleUrls: ['./register-next.page.scss'],\n})\nexport class RegisterNextPage {\n  @ViewChild('modalEnd') modal: IonModal;\n\n  form: FormGroup;\n  payload: TmpUser;\n\n  cityOptions: { name: string; value: string }[] = [];\n  townOptions: { name: string; value: string }[] = [];\n\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    private router: Router,\n    private app: AppService,\n    private auth: AuthService,\n    private alert: AlertService,\n    private loader: LoaderService,\n    private storage: StorageService,\n  ) {\n    Object.keys(locations).forEach(value => {\n      this.cityOptions.push({ name: capitalize(value).trim(), value: value.trim().toLowerCase() });\n    });\n\n    this.form = new FormGroup({\n      city: new FormControl(null, [\n        Validators.required,\n      ]),\n      town: new FormControl(null, [\n        Validators.required,\n      ]),\n    });\n  }\n\n  ionViewDidEnter() {\n    const sub = this.form.controls.city.valueChanges.subscribe((value: string) => {\n      this.townOptions = value ? locations[`${value}`] : [];\n    });\n\n    this.subscriptions.push(sub);\n  }\n\n  ionViewWillLeave() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  async onSubmit() {\n    if (!this.form.controls.city.valid) {\n      this.alert.present('Veuillez choisir une ville.');\n      return;\n    }\n\n    if (!this.form.controls.town.valid) {\n      this.alert.present('Veuillez choisir une commune.');\n      return;\n    }\n\n    await this.loader.present('Inscription...');\n\n    const cityId: string = this.form.value.city;\n    const townId: string = this.form.value.town;\n    const { name, email, phone, password } = (await this.storage.get('soutramoi_tmp_register') as TmpUser);\n    const anonym = this.auth.currentUser();\n    const anonymUid = anonym ? anonym.uid : null;\n\n    const payload: any = {\n      email,\n      phone,\n      password,\n      name,\n      cityId,\n      townId,\n    };\n\n    if (anonymUid) {\n      payload.anonymUid = anonymUid;\n    }\n\n    this.auth\n      .register(payload).then(async user => {\n        await this.auth.setUser(user);\n        await this.loader.dismiss();\n        await this.router.navigate(['/tabs/profile']);\n      })\n      .catch(err => this.app.handlingError(err))\n      .finally(() => {\n        this.storage.remove('soutramoi_tmp_register');\n      });\n  }\n\n  async presentModal() {\n    await this.modal.present();\n  }\n\n  async dismissModal() {\n    await this.modal.dismiss();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}