{"ast":null,"code":"import { __awaiter, __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./map.page.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./map.page.scss?ngResource\";\nimport { Component } from '@angular/core';\nimport { Platform } from '@ionic/angular';\nimport { Geolocation } from '@capacitor/geolocation';\nimport { AndroidSettings, IOSSettings, NativeSettings } from 'capacitor-native-settings';\nimport { AlertService } from 'src/app/services/alert.service';\nlet MapPage = class MapPage {\n  constructor(platform, alert) {\n    this.platform = platform;\n    this.alert = alert;\n    this.mapCenter = [-3.9655, 5.2834];\n    this.mapStyle = 'mapbox://styles/mapbox/streets-v11';\n    this.isHybrid = true;\n    this.loaded = false;\n    this.geoPermission = false;\n    this.meData = {\n      type: 'Feature',\n      geometry: {\n        type: 'Point',\n        coordinates: [0, 0]\n      }\n    };\n    this.isHybrid = this.platform.is('hybrid');\n  }\n  ngOnInit() {}\n  ngAfterViewInit() {}\n  ready(map) {\n    this.map = map;\n    this.map.resize();\n    setTimeout(() => this.initialize(), 1500);\n  }\n  locate() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const {\n        coords\n      } = yield Geolocation.getCurrentPosition();\n      const center = [coords.longitude, coords.latitude];\n      // geojson.features[0].geometry.coordinates = [coords.lng, coords.lat];\n      // this.map.getSource('point').setData(geojson);\n      if (this.map.getSource('pulse')) {\n        const data = Object.assign(Object.assign({}, this.meData), {\n          geometry: Object.assign(Object.assign({}, this.meData.geometry), {\n            coordinates: center\n          })\n        });\n        // this.map.getSource('pulse').setData(data);\n      } else {\n        this.placePulse(center[0], center[1]);\n      }\n      this.map.flyTo({\n        center,\n        zoom: 14\n      });\n    });\n  }\n  initialize() {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.loaded = true;\n      const permission = yield this.getPermission();\n      if (permission) {\n        this.geoPermission = true;\n        const {\n          coords\n        } = yield Geolocation.getCurrentPosition();\n        const center = [coords.longitude, coords.latitude];\n        this.placePulse(center[0], center[1]);\n        this.mapCenter = center;\n      } else {\n        this.geoPermission = false;\n        this.alert.present({\n          title: 'Permission',\n          text: 'Vous devez autoriser l’accès à votre position pour afficher l’itinéraire.',\n          showCancelButton: true,\n          confirmButtonText: 'Autoriser',\n          cancelButtonText: 'Annuler'\n        }).then(result => {\n          if (result.isConfirmed) {\n            if (this.platform.is('android')) {\n              NativeSettings.openAndroid({\n                option: AndroidSettings.ApplicationDetails\n              });\n            } else {\n              NativeSettings.openIOS({\n                option: IOSSettings.App\n              });\n            }\n          }\n        });\n      }\n    });\n  }\n  placePulse(lng, lat) {\n    const point = Object.assign(Object.assign({}, this.meData), {\n      geometry: Object.assign(Object.assign({}, this.meData.geometry), {\n        coordinates: [lng, lat]\n      })\n    });\n    this.map.addImage('pulse-dot', this.pulseDot(this.map, 100), {\n      pixelRatio: 2\n    });\n    this.map.addSource('pulse', {\n      type: 'geojson',\n      data: point\n    });\n    this.map.addLayer({\n      id: 'pulse',\n      type: 'symbol',\n      source: 'pulse',\n      layout: {\n        'icon-image': 'pulse-dot'\n      }\n    });\n  }\n  pulseDot(map, size = 200) {\n    const pulse = {\n      width: size,\n      height: size,\n      data: new Uint8Array(size * size * 4)\n    };\n    pulse.onAdd = () => {\n      const canvas = document.createElement('canvas');\n      canvas.width = pulse.width;\n      canvas.height = pulse.height;\n      pulse.context = canvas.getContext('2d');\n    };\n    pulse.render = () => {\n      const duration = 1000;\n      const t = performance.now() % duration / duration;\n      const radius = size / 2 * 0.3;\n      const outerRadius = size / 2 * 0.7 * t + radius;\n      const context = pulse.context;\n      // Draw the outer circle.\n      context.clearRect(0, 0, pulse.width, pulse.height);\n      context.beginPath();\n      context.arc(pulse.width / 2, pulse.height / 2, outerRadius, 0, Math.PI * 2);\n      context.fillStyle = `rgba(254,105,2, ${1 - t})`;\n      context.fill();\n      // Draw the inner circle.\n      context.beginPath();\n      context.arc(pulse.width / 2, pulse.height / 2, radius, 0, Math.PI * 2);\n      context.fillStyle = 'rgba(254,105,2, 1)';\n      context.strokeStyle = 'white';\n      context.lineWidth = 2 + 4 * (1 - t);\n      context.fill();\n      context.stroke();\n      pulse.data = context.getImageData(0, 0, pulse.width, pulse.height).data;\n      map.triggerRepaint();\n      return true;\n    };\n    return pulse;\n  }\n  getPermission() {\n    return __awaiter(this, void 0, void 0, function* () {\n      let granted = false;\n      const permissions = yield Geolocation.checkPermissions();\n      if (permissions.location === 'granted') {\n        granted = true;\n      } else {\n        const status = yield Geolocation.requestPermissions();\n        if (status.location === 'granted') {\n          granted = true;\n        }\n      }\n      return granted;\n    });\n  }\n};\nMapPage.ctorParameters = () => [{\n  type: Platform\n}, {\n  type: AlertService\n}];\nMapPage = __decorate([Component({\n  selector: 'tab-map',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], MapPage);\nexport { MapPage };","map":{"version":3,"mappings":"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","names":["Component","Platform","Geolocation","AndroidSettings","IOSSettings","NativeSettings","AlertService","MapPage","constructor","platform","alert","type","geometry","coordinates","isHybrid","is","ngOnInit","ngAfterViewInit","ready","map","resize","setTimeout","initialize","locate","coords","getCurrentPosition","center","longitude","latitude","getSource","data","meData","placePulse","flyTo","zoom","loaded","permission","getPermission","geoPermission","mapCenter","present","title","text","showCancelButton","confirmButtonText","cancelButtonText","then","result","isConfirmed","openAndroid","option","ApplicationDetails","openIOS","App","lng","lat","point","addImage","pulseDot","pixelRatio","addSource","addLayer","id","source","layout","size","pulse","width","height","Uint8Array","onAdd","canvas","document","createElement","context","getContext","render","duration","t","performance","now","radius","outerRadius","clearRect","beginPath","arc","Math","PI","fillStyle","fill","strokeStyle","lineWidth","stroke","getImageData","triggerRepaint","granted","permissions","checkPermissions","location","status","requestPermissions","selector","template"],"sourceRoot":"","sources":["/home/digifemmes-22lab149/Bureau/soutramoi_app/src/app/pages/tabs/map/map.page.ts"],"sourcesContent":["import { AfterViewInit, Component, OnInit } from '@angular/core';\nimport { Platform } from '@ionic/angular';\nimport { LngLatLike, Map } from 'mapbox-gl';\n\nimport { Geolocation } from '@capacitor/geolocation';\nimport { AndroidSettings, IOSSettings, NativeSettings } from 'capacitor-native-settings';\n\nimport { AlertService } from 'src/app/services/alert.service';\n\n@Component({\n  selector: 'tab-map',\n  templateUrl: 'map.page.html',\n  styleUrls: ['map.page.scss'],\n})\nexport class MapPage implements OnInit, AfterViewInit {\n  map: Map;\n  mapCenter: LngLatLike = [-3.9655, 5.2834];\n  mapStyle = 'mapbox://styles/mapbox/streets-v11';\n\n  isHybrid = true;\n  loaded = false;\n  geoPermission = false;\n\n  meData: any = {\n    type: 'Feature',\n    geometry: { type: 'Point', coordinates: [0, 0] },\n  };\n\n  constructor(\n    private platform: Platform,\n    private alert: AlertService,\n  ) {\n    this.isHybrid = this.platform.is('hybrid');\n  }\n\n  ngOnInit() { }\n\n  ngAfterViewInit() { }\n\n  ready(map: Map) {\n    this.map = map;\n    this.map.resize();\n    setTimeout(() => this.initialize(), 1500);\n  }\n\n  async locate() {\n    const { coords } = await Geolocation.getCurrentPosition();\n    const center: LngLatLike = [coords.longitude, coords.latitude];\n\n    // geojson.features[0].geometry.coordinates = [coords.lng, coords.lat];\n    // this.map.getSource('point').setData(geojson);\n\n    if (this.map.getSource('pulse')) {\n      const data = { ...this.meData, geometry: { ...this.meData.geometry, coordinates: center } };\n\n      // this.map.getSource('pulse').setData(data);\n    } else {\n      this.placePulse(center[0], center[1]);\n    }\n\n    this.map.flyTo({ center, zoom: 14 });\n  }\n\n  private async initialize() {\n    this.loaded = true;\n\n    const permission = await this.getPermission();\n\n    if (permission) {\n      this.geoPermission = true;\n      const { coords } = await Geolocation.getCurrentPosition();\n      const center: LngLatLike = [coords.longitude, coords.latitude];\n\n      this.placePulse(center[0], center[1]);\n      this.mapCenter = center;\n    } else {\n      this.geoPermission = false;\n\n      this.alert.present({\n        title: 'Permission',\n        text: 'Vous devez autoriser l’accès à votre position pour afficher l’itinéraire.',\n        showCancelButton: true,\n        confirmButtonText: 'Autoriser',\n        cancelButtonText: 'Annuler',\n      }).then(result => {\n        if (result.isConfirmed) {\n          if (this.platform.is('android')) {\n            NativeSettings.openAndroid({ option: AndroidSettings.ApplicationDetails });\n          } else {\n            NativeSettings.openIOS({ option: IOSSettings.App });\n          }\n        }\n      });\n    }\n  }\n\n  private placePulse(lng: number, lat: number) {\n    const point = { ...this.meData, geometry: { ...this.meData.geometry, coordinates: [lng, lat] } };\n\n    this.map.addImage('pulse-dot', this.pulseDot(this.map, 100), { pixelRatio: 2 });\n    this.map.addSource('pulse', { type: 'geojson', data: point });\n    this.map.addLayer({ id: 'pulse', type: 'symbol', source: 'pulse', layout: { 'icon-image': 'pulse-dot' } });\n  }\n\n  private pulseDot(map: Map, size = 200) {\n    const pulse: {\n      width: number;\n      height: number;\n      data: Uint8Array | Uint8ClampedArray;\n      context?: CanvasRenderingContext2D;\n      onAdd?: () => void;\n      render?: () => void;\n    } = {\n      width: size,\n      height: size,\n      data: new Uint8Array(size * size * 4),\n    };\n\n    pulse.onAdd = () => {\n      const canvas = document.createElement('canvas');\n      canvas.width = pulse.width;\n      canvas.height = pulse.height;\n      pulse.context = canvas.getContext('2d');\n    };\n\n    pulse.render = () => {\n      const duration = 1000;\n      const t = (performance.now() % duration) / duration;\n\n      const radius = (size / 2) * 0.3;\n      const outerRadius = (size / 2) * 0.7 * t + radius;\n      const context = pulse.context;\n\n      // Draw the outer circle.\n      context.clearRect(0, 0, pulse.width, pulse.height);\n      context.beginPath();\n      context.arc(pulse.width / 2, pulse.height / 2, outerRadius, 0, Math.PI * 2);\n      context.fillStyle = `rgba(254,105,2, ${1 - t})`;\n      context.fill();\n\n      // Draw the inner circle.\n      context.beginPath();\n      context.arc(pulse.width / 2, pulse.height / 2, radius, 0, Math.PI * 2);\n      context.fillStyle = 'rgba(254,105,2, 1)';\n      context.strokeStyle = 'white';\n      context.lineWidth = 2 + 4 * (1 - t);\n      context.fill();\n      context.stroke();\n\n      pulse.data = context.getImageData(0, 0, pulse.width, pulse.height).data;\n      map.triggerRepaint();\n\n      return true;\n    };\n\n    return pulse;\n  }\n\n  private async getPermission() {\n    let granted = false;\n    const permissions = await Geolocation.checkPermissions();\n\n    if (permissions.location === 'granted') {\n      granted = true;\n    } else {\n      const status = await Geolocation.requestPermissions();\n\n      if (status.location === 'granted') {\n        granted = true;\n      }\n    }\n\n    return granted;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}