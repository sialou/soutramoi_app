{"ast":null,"code":"import { __awaiter, __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./auth-social.component.scss?ngResource\";\nimport { Component } from '@angular/core';\nimport { Platform } from '@ionic/angular';\nimport { Router } from '@angular/router';\nimport { OAuthProvider, FacebookAuthProvider, getAuth, GoogleAuthProvider, signInWithCredential, signInWithPopup } from '@angular/fire/auth';\nimport { from } from 'rxjs';\nimport { GoogleAuth } from '@codetrix-studio/capacitor-google-auth';\nimport { FacebookLogin } from '@capacitor-community/facebook-login';\nimport { SignInWithApple } from '@capacitor-community/apple-sign-in';\nimport { AppService } from 'src/app/services/app.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { LoaderService } from 'src/app/services/loader.service';\nlet AuthSocialComponent = class AuthSocialComponent {\n  constructor(router, platform, authService, loader, app) {\n    this.router = router;\n    this.platform = platform;\n    this.authService = authService;\n    this.loader = loader;\n    this.app = app;\n    this.isIos = this.platform.is('ios');\n    this.isNative = this.platform.is('hybrid');\n    this.subscriptions = [];\n    this.auth = getAuth();\n    this.platform.ready().then(() => {\n      GoogleAuth.initialize({\n        clientId: '297478535727-6m04h9hk77rf43r03r0gdh0tf4t7vb30.apps.googleusercontent.com',\n        scopes: ['profile', 'email'],\n        grantOfflineAccess: true\n      });\n    });\n  }\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n  signInWithApple() {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.loader.present('Connexion...');\n      const provider = new OAuthProvider('apple.com');\n      provider.setCustomParameters({\n        locale: 'fr'\n      });\n      if (!this.platform.is('hybrid')) {\n        provider.addScope('email');\n        provider.addScope('name');\n        this.signInWithWeb(provider);\n        return;\n      }\n      SignInWithApple.authorize().then(res => {\n        const credential = provider.credential({\n          idToken: res.response.identityToken\n        });\n        this.signInWithCredential(credential, provider.providerId);\n      }, e => this.app.handlingError(e));\n    });\n  }\n  signInWithFacebook() {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.loader.present('Connexion...');\n      if (!this.platform.is('hybrid')) {\n        this.signInWithWeb(new FacebookAuthProvider());\n        return;\n      }\n      FacebookLogin.login({\n        permissions: ['email', 'public_profile']\n      }).then(res => {\n        const credential = FacebookAuthProvider.credential(res.accessToken.token);\n        this.signInWithCredential(credential, FacebookAuthProvider.PROVIDER_ID);\n      }, e => this.app.handlingError(e));\n    });\n  }\n  signInWithGoogle() {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.loader.present('Connexion...');\n      if (!this.platform.is('hybrid')) {\n        this.signInWithWeb(new GoogleAuthProvider());\n        return;\n      }\n      try {\n        const user = yield GoogleAuth.signIn();\n        const credential = GoogleAuthProvider.credential(user.authentication.idToken);\n        this.signInWithCredential(credential, GoogleAuthProvider.PROVIDER_ID);\n      } catch (e) {\n        this.app.handlingError(e);\n      }\n    });\n  }\n  signInWithCredential(credential, provider) {\n    const promise = signInWithCredential(this.auth, credential);\n    this.handle(promise, provider);\n  }\n  signInWithWeb(authProvider) {\n    if (!this.isNative && this.authService.currentUser !== null) {\n      this.authService.signOut();\n    }\n    const promise = signInWithPopup(this.auth, authProvider);\n    this.handle(promise, authProvider.providerId);\n  }\n  handle(promise, provider) {\n    promise.then(crd => __awaiter(this, void 0, void 0, function* () {\n      const id_token = yield crd.user.getIdToken();\n      const payload = {\n        provider,\n        id_token\n      };\n      const sub = from(this.authService.provider(payload)).subscribe({\n        next: user => __awaiter(this, void 0, void 0, function* () {\n          yield this.authService.setUser(user);\n          yield this.loader.dismiss();\n          yield this.router.navigate(['/tabs/profile']);\n        }),\n        error: err => this.app.handlingError(err)\n      });\n      this.subscriptions.push(sub);\n    }), e => this.app.handlingError(e));\n  }\n};\nAuthSocialComponent.ctorParameters = () => [{\n  type: Router\n}, {\n  type: Platform\n}, {\n  type: AuthService\n}, {\n  type: LoaderService\n}, {\n  type: AppService\n}];\nAuthSocialComponent = __decorate([Component({\n  selector: 'auth-social',\n  template: `\n    <button type=\"button\" (click)=\"signInWithApple()\" *ngIf=\"isIos\">\n      <svg-asset [src]=\"'img/apple.svg'\" [width]=\"20\"></svg-asset> Se connecter avec Apple\n    </button>\n    <button type=\"button\" (click)=\"signInWithFacebook()\">\n      <svg-asset [src]=\"'img/facebook.svg'\" [width]=\"20\"></svg-asset> Se connecter avec Facebook\n    </button>\n    <button type=\"button\" (click)=\"signInWithGoogle()\">\n      <svg-asset [src]=\"'img/google.svg'\" [width]=\"20\"></svg-asset> Se connecter avec Google\n    </button>\n  `,\n  styles: [__NG_CLI_RESOURCE__0]\n})], AuthSocialComponent);\nexport { AuthSocialComponent };","map":{"version":3,"mappings":"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","names":["Component","Platform","Router","OAuthProvider","FacebookAuthProvider","getAuth","GoogleAuthProvider","signInWithCredential","signInWithPopup","from","GoogleAuth","FacebookLogin","SignInWithApple","AppService","AuthService","LoaderService","AuthSocialComponent","constructor","router","platform","authService","loader","app","is","ready","then","initialize","clientId","scopes","grantOfflineAccess","ngOnDestroy","subscriptions","forEach","sub","unsubscribe","signInWithApple","present","provider","setCustomParameters","locale","addScope","signInWithWeb","authorize","res","credential","idToken","response","identityToken","providerId","e","handlingError","signInWithFacebook","login","permissions","accessToken","token","PROVIDER_ID","signInWithGoogle","user","signIn","authentication","promise","auth","handle","authProvider","isNative","currentUser","signOut","crd","__awaiter","id_token","getIdToken","payload","subscribe","next","setUser","dismiss","navigate","error","err","push","selector","template"],"sourceRoot":"","sources":["/home/digifemmes-22lab149/Bureau/soutramoi_app/src/app/shared/auth-social/auth-social.component.ts"],"sourcesContent":["import { Component, OnDestroy } from '@angular/core';\nimport { Platform } from '@ionic/angular';\nimport { Router } from '@angular/router';\nimport {\n  AuthProvider,\n  OAuthProvider,\n  FacebookAuthProvider,\n  getAuth,\n  GoogleAuthProvider,\n  OAuthCredential,\n  signInWithCredential,\n  signInWithPopup,\n  UserCredential,\n} from '@angular/fire/auth';\nimport { from, Subscription } from 'rxjs';\n\nimport { GoogleAuth } from '@codetrix-studio/capacitor-google-auth';\nimport { FacebookLogin } from '@capacitor-community/facebook-login';\nimport { SignInWithApple } from '@capacitor-community/apple-sign-in';\n\nimport { AppService } from 'src/app/services/app.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { LoaderService } from 'src/app/services/loader.service';\n\n@Component({\n  selector: 'auth-social',\n  styleUrls: ['./auth-social.component.scss'],\n  template: `\n    <button type=\"button\" (click)=\"signInWithApple()\" *ngIf=\"isIos\">\n      <svg-asset [src]=\"'img/apple.svg'\" [width]=\"20\"></svg-asset> Se connecter avec Apple\n    </button>\n    <button type=\"button\" (click)=\"signInWithFacebook()\">\n      <svg-asset [src]=\"'img/facebook.svg'\" [width]=\"20\"></svg-asset> Se connecter avec Facebook\n    </button>\n    <button type=\"button\" (click)=\"signInWithGoogle()\">\n      <svg-asset [src]=\"'img/google.svg'\" [width]=\"20\"></svg-asset> Se connecter avec Google\n    </button>\n  `,\n})\nexport class AuthSocialComponent implements OnDestroy {\n  readonly isIos = this.platform.is('ios');\n  readonly isNative = this.platform.is('hybrid');\n  private subscriptions: Subscription[] = [];\n  private auth = getAuth();\n\n  constructor(\n    private router: Router,\n    private platform: Platform,\n    private authService: AuthService,\n    private loader: LoaderService,\n    private app: AppService,\n  ) {\n    this.platform.ready().then(() => {\n      GoogleAuth.initialize({\n        clientId: '297478535727-6m04h9hk77rf43r03r0gdh0tf4t7vb30.apps.googleusercontent.com',\n        scopes: ['profile', 'email'],\n        grantOfflineAccess: true,\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  async signInWithApple() {\n    await this.loader.present('Connexion...');\n\n    const provider = new OAuthProvider('apple.com');\n    provider.setCustomParameters({ locale: 'fr' });\n\n    if (!this.platform.is('hybrid')) {\n      provider.addScope('email');\n      provider.addScope('name');\n\n      this.signInWithWeb(provider);\n      return;\n    }\n\n    SignInWithApple.authorize().then(\n      res => {\n        const credential = provider.credential({ idToken: res.response.identityToken });\n        this.signInWithCredential(credential, provider.providerId);\n      },\n      e => this.app.handlingError(e)\n    );\n  }\n\n  async signInWithFacebook() {\n    await this.loader.present('Connexion...');\n\n    if (!this.platform.is('hybrid')) {\n      this.signInWithWeb(new FacebookAuthProvider());\n      return;\n    }\n\n    FacebookLogin.login({ permissions: ['email', 'public_profile'] }).then(\n      res => {\n        const credential = FacebookAuthProvider.credential(res.accessToken.token);\n        this.signInWithCredential(credential, FacebookAuthProvider.PROVIDER_ID);\n      },\n      e => this.app.handlingError(e)\n    );\n  }\n\n  async signInWithGoogle() {\n    await this.loader.present('Connexion...');\n\n    if (!this.platform.is('hybrid')) {\n      this.signInWithWeb(new GoogleAuthProvider());\n      return;\n    }\n\n    try {\n      const user = await GoogleAuth.signIn();\n      const credential = GoogleAuthProvider.credential(user.authentication.idToken);\n      this.signInWithCredential(credential, GoogleAuthProvider.PROVIDER_ID);\n    } catch (e) {\n      this.app.handlingError(e);\n    }\n  }\n\n  private signInWithCredential(credential: OAuthCredential, provider: string) {\n    const promise = signInWithCredential(this.auth, credential);\n    this.handle(promise, provider);\n  }\n\n  private signInWithWeb(authProvider: AuthProvider) {\n    if (!this.isNative && this.authService.currentUser !== null) {\n      this.authService.signOut();\n    }\n\n    const promise = signInWithPopup(this.auth, authProvider);\n    this.handle(promise, authProvider.providerId);\n  }\n\n  private handle(promise: Promise<UserCredential>, provider?: string) {\n    promise.then(\n      async crd => {\n        const id_token = await crd.user.getIdToken();\n        const payload: any = { provider, id_token };\n\n        const sub = from(this.authService.provider(payload)).subscribe({\n          next: async (user: User) => {\n\n            await this.authService.setUser(user);\n            await this.loader.dismiss();\n            await this.router.navigate(['/tabs/profile']);\n          },\n          error: err => this.app.handlingError(err)\n        });\n\n        this.subscriptions.push(sub);\n      },\n      e => this.app.handlingError(e)\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}