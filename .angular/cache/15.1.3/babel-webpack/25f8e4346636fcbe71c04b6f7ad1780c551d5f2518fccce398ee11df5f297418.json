{"ast":null,"code":"import { __awaiter, __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Platform } from '@ionic/angular';\nimport { StatusBar } from '@capacitor/status-bar';\nimport { SplashScreen } from '@capacitor/splash-screen';\nimport { pageTransition } from './animations';\nimport { StorageService } from './services/storage.service';\nimport { NotificationsService } from './services/notifications.service';\nlet AppComponent = class AppComponent {\n  constructor(platform, storage, notifications) {\n    this.platform = platform;\n    this.storage = storage;\n    this.notifications = notifications;\n    this.logged = false;\n    this.initialized = false;\n    this.errorMessage = '';\n  }\n  ngOnInit() {\n    this.platform.ready().then(() => __awaiter(this, void 0, void 0, function* () {\n      if (this.platform.is('hybrid')) {\n        yield this.initializeNative();\n        yield this.welcomeNative();\n      }\n    }));\n  }\n  initializeNative() {\n    return __awaiter(this, void 0, void 0, function* () {\n      setTimeout(() => SplashScreen.hide(), 3000);\n      yield StatusBar.setOverlaysWebView({\n        overlay: true\n      });\n    });\n  }\n  welcomeNative() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const key = 'soutramoi_welcomedate';\n      const welcomeDate = yield this.storage.get(key);\n      if (!welcomeDate) {\n        this.notifications.firstTimeNotification();\n        yield this.storage.set(key, new Date().toISOString());\n      }\n    });\n  }\n};\nAppComponent.ctorParameters = () => [{\n  type: Platform\n}, {\n  type: StorageService\n}, {\n  type: NotificationsService\n}];\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  animations: [pageTransition],\n  template: `\n    <ion-app>\n      <ion-router-outlet></ion-router-outlet>\n      <app-loader></app-loader>\n    </ion-app>\n\n    <!-- <div class=\"app-preloader\" @PageTransition *ngIf=\"!logged\">\n      <app-spinner-infinity\n        [width]=\"100\"\n        [color]=\"'#FFFFFF'\"\n        [secondaryColor]=\"'rgba(255,255,255,0.25)'\"\n        *ngIf=\"errorMessage.length === 0\"\n      ></app-spinner-infinity>\n      <div class=\"message\" *ngIf=\"errorMessage.length > 0\">{{errorMessage}}</div>\n    </div> -->\n  `\n})], AppComponent);\nexport { AppComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,QAAQ,QAAQ,gBAAgB;AAEzC,SAASC,SAAS,QAAQ,uBAAuB;AACjD,SAASC,YAAY,QAAQ,0BAA0B;AAEvD,SAASC,cAAc,QAAQ,cAAc;AAC7C,SAASC,cAAc,QAAQ,4BAA4B;AAC3D,SAASC,oBAAoB,QAAQ,kCAAkC;AAsBhE,IAAMC,YAAY,GAAlB,MAAMA,YAAY;EAKvBC,YACUC,QAAkB,EAClBC,OAAuB,EACvBC,aAAmC;IAFnC,aAAQ,GAARF,QAAQ;IACR,YAAO,GAAPC,OAAO;IACP,kBAAa,GAAbC,aAAa;IAPvB,WAAM,GAAG,KAAK;IACd,gBAAW,GAAG,KAAK;IACnB,iBAAY,GAAG,EAAE;EAMb;EAEJC,QAAQ;IACN,IAAI,CAACH,QAAQ,CAACI,KAAK,EAAE,CAACC,IAAI,CAAC,MAAWC;MACpC,IAAI,IAAI,CAACN,QAAQ,CAACO,EAAE,CAAC,QAAQ,CAAC,EAAE;QAC9B,MAAM,IAAI,CAACC,gBAAgB,EAAE;QAC7B,MAAM,IAAI,CAACC,aAAa,EAAE;;IAE9B,CAAC,EAAC;EACJ;EAEcD,gBAAgB;;MAC5BE,UAAU,CAAC,MAAMhB,YAAY,CAACiB,IAAI,EAAE,EAAE,IAAI,CAAC;MAC3C,MAAMlB,SAAS,CAACmB,kBAAkB,CAAC;QAAEC,OAAO,EAAE;MAAI,CAAE,CAAC;IACvD,CAAC;;EAEaJ,aAAa;;MACzB,MAAMK,GAAG,GAAG,uBAAuB;MACnC,MAAMC,WAAW,GAAG,MAAM,IAAI,CAACd,OAAO,CAACe,GAAG,CAACF,GAAG,CAAC;MAE/C,IAAI,CAACC,WAAW,EAAE;QAChB,IAAI,CAACb,aAAa,CAACe,qBAAqB,EAAE;QAC1C,MAAM,IAAI,CAAChB,OAAO,CAACiB,GAAG,CAACJ,GAAG,EAAG,IAAIK,IAAI,EAAE,CAAEC,WAAW,EAAE,CAAC;;IAE3D,CAAC;;;;;;;;;;AAjCUtB,YAAY,eApBxBP,SAAS,CAAC;EACT8B,QAAQ,EAAE,UAAU;EACpBC,UAAU,EAAE,CAAC3B,cAAc,CAAC;EAC5B4B,QAAQ,EAAE;;;;;;;;;;;;;;;;CAgBX,CAAC,GACWzB,YAAY,CAkCxB;SAlCYA,YAAY","names":["Component","Platform","StatusBar","SplashScreen","pageTransition","StorageService","NotificationsService","AppComponent","constructor","platform","storage","notifications","ngOnInit","ready","then","__awaiter","is","initializeNative","welcomeNative","setTimeout","hide","setOverlaysWebView","overlay","key","welcomeDate","get","firstTimeNotification","set","Date","toISOString","selector","animations","template"],"sourceRoot":"","sources":["/home/digifemmes-22lab149/Bureau/soutramoi_app/src/app/app.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Platform } from '@ionic/angular';\n\nimport { StatusBar } from '@capacitor/status-bar';\nimport { SplashScreen } from '@capacitor/splash-screen';\n\nimport { pageTransition } from './animations';\nimport { StorageService } from './services/storage.service';\nimport { NotificationsService } from './services/notifications.service';\n\n@Component({\n  selector: 'app-root',\n  animations: [pageTransition],\n  template: `\n    <ion-app>\n      <ion-router-outlet></ion-router-outlet>\n      <app-loader></app-loader>\n    </ion-app>\n\n    <!-- <div class=\"app-preloader\" @PageTransition *ngIf=\"!logged\">\n      <app-spinner-infinity\n        [width]=\"100\"\n        [color]=\"'#FFFFFF'\"\n        [secondaryColor]=\"'rgba(255,255,255,0.25)'\"\n        *ngIf=\"errorMessage.length === 0\"\n      ></app-spinner-infinity>\n      <div class=\"message\" *ngIf=\"errorMessage.length > 0\">{{errorMessage}}</div>\n    </div> -->\n  `,\n})\nexport class AppComponent implements OnInit {\n  logged = false;\n  initialized = false;\n  errorMessage = '';\n\n  constructor(\n    private platform: Platform,\n    private storage: StorageService,\n    private notifications: NotificationsService,\n  ) { }\n\n  ngOnInit() {\n    this.platform.ready().then(async () => {\n      if (this.platform.is('hybrid')) {\n        await this.initializeNative();\n        await this.welcomeNative();\n      }\n    });\n  }\n\n  private async initializeNative() {\n    setTimeout(() => SplashScreen.hide(), 3000);\n    await StatusBar.setOverlaysWebView({ overlay: true });\n  }\n\n  private async welcomeNative() {\n    const key = 'soutramoi_welcomedate';\n    const welcomeDate = await this.storage.get(key);\n\n    if (!welcomeDate) {\n      this.notifications.firstTimeNotification();\n      await this.storage.set(key, (new Date()).toISOString());\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}