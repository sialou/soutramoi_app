{"ast":null,"code":"import { __awaiter, __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./register.page.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./register.page.scss?ngResource\";\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { matchValidator } from 'src/app/helpers';\nimport { AlertService } from 'src/app/services/alert.service';\nimport { StorageService } from 'src/app/services/storage.service';\nlet RegisterPage = class RegisterPage {\n  constructor(router, alert, storage) {\n    this.router = router;\n    this.alert = alert;\n    this.storage = storage;\n    this.form = new FormGroup({\n      name: new FormControl(null, [Validators.required, Validators.minLength(5), Validators.pattern(/^[\\p{L}\\'][ \\p{L}\\'-]*[\\p{L}]$/)]),\n      username: new FormControl(null, [Validators.required, Validators.pattern(/^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$|^[0-9]{10}$/)]),\n      password: new FormControl(null, [Validators.required, Validators.minLength(8)]),\n      passwordConfirm: new FormControl(null, [Validators.required, Validators.minLength(8)])\n    }, {\n      validators: [matchValidator(['password', 'passwordConfirm'])]\n    });\n  }\n  onSubmit() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this.form.controls.name.valid) {\n        this.alert.present('Votre nom n\\'est pas valide, veuilez entrer votre nom complet. (ex: \"Marc Antoine\")');\n        return;\n      }\n      if (!this.form.controls.username.valid) {\n        this.alert.present('Veuillez entrer une adresse email ou un numéro de téléphone valide.');\n        return;\n      }\n      if (this.form.errors && this.form.errors.match) {\n        this.alert.present('Les mots de passe ne correspondent pas.');\n        return;\n      }\n      const name = this.form.value.name;\n      const username = this.form.value.username;\n      const password = this.form.value.password;\n      let email = username;\n      let phone = null;\n      if (username.match(/^[0-9]{10}$/)) {\n        phone = username;\n        email = `${username}@soutramoi.com`;\n      }\n      yield this.storage.set('soutramoi_tmp_register', {\n        name,\n        email,\n        phone,\n        password\n      });\n      yield this.router.navigate(['/auth/register-next']);\n    });\n  }\n};\nRegisterPage.ctorParameters = () => [{\n  type: Router\n}, {\n  type: AlertService\n}, {\n  type: StorageService\n}];\nRegisterPage = __decorate([Component({\n  selector: 'app-register',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], RegisterPage);\nexport { RegisterPage };","map":{"version":3,"mappings":"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","names":["Component","Router","FormControl","FormGroup","Validators","matchValidator","AlertService","StorageService","RegisterPage","constructor","router","alert","storage","form","name","required","minLength","pattern","username","password","passwordConfirm","validators","onSubmit","controls","valid","present","errors","match","value","email","phone","set","navigate","selector","template"],"sourceRoot":"","sources":["/home/digifemmes-22lab149/Bureau/soutramoi_app/src/app/pages/auth/register/register.page.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\nimport { matchValidator } from 'src/app/helpers';\nimport { AlertService } from 'src/app/services/alert.service';\nimport { StorageService } from 'src/app/services/storage.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage {\n  form: FormGroup;\n\n  constructor(\n    private router: Router,\n    private alert: AlertService,\n    private storage: StorageService,\n  ) {\n    this.form = new FormGroup(\n      {\n        name: new FormControl(null, [\n          Validators.required,\n          Validators.minLength(5),\n          Validators.pattern(/^[\\p{L}\\'][ \\p{L}\\'-]*[\\p{L}]$/),\n        ]),\n        username: new FormControl(null, [\n          Validators.required,\n          Validators.pattern(/^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$|^[0-9]{10}$/),\n        ]),\n        password: new FormControl(null, [\n          Validators.required,\n          Validators.minLength(8),\n        ]),\n        passwordConfirm: new FormControl(null, [\n          Validators.required,\n          Validators.minLength(8),\n        ]),\n      },\n      {\n        validators: [\n          matchValidator(['password', 'passwordConfirm']),\n        ],\n      }\n    );\n  }\n\n  async onSubmit() {\n    if (!this.form.controls.name.valid) {\n      this.alert.present('Votre nom n\\'est pas valide, veuilez entrer votre nom complet. (ex: \"Marc Antoine\")');\n      return;\n    }\n\n    if (!this.form.controls.username.valid) {\n      this.alert.present('Veuillez entrer une adresse email ou un numéro de téléphone valide.');\n      return;\n    }\n\n    if (this.form.errors && this.form.errors.match) {\n      this.alert.present('Les mots de passe ne correspondent pas.');\n      return;\n    }\n\n    const name: string = this.form.value.name;\n    const username: string = this.form.value.username;\n    const password: string = this.form.value.password;\n\n    let email = username;\n    let phone = null;\n\n    if (username.match(/^[0-9]{10}$/)) {\n      phone = username;\n      email = `${username}@soutramoi.com`;\n    }\n\n    await this.storage.set('soutramoi_tmp_register', { name, email, phone, password });\n    await this.router.navigate(['/auth/register-next']);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}