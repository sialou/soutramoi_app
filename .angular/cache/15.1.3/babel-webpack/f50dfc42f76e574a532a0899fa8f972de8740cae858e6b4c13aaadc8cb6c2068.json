{"ast":null,"code":"import { __awaiter, __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./favorite.page.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./favorite.page.scss?ngResource\";\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport Fuse from 'fuse.js';\nimport { fadeTransition } from 'src/app/animations';\nimport { AppService } from 'src/app/services/app.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { NetworkService, NetworkState } from 'src/app/services/network.service';\nimport { HttpClient } from '@angular/common/http';\nlet FavoritePage = class FavoritePage {\n  constructor(router, http, app, auth, network) {\n    this.router = router;\n    this.http = http;\n    this.app = app;\n    this.auth = auth;\n    this.network = network;\n    this.items = [];\n    this.stack = [];\n    this.searchPattern = '';\n    this.state = new BehaviorSubject('initial');\n    this.defaultFailMessage = 'Une erreur est survenue lors de la récupération des données.';\n    this.failMessage = this.defaultFailMessage;\n    this.limit = 10;\n    this.logged = false;\n    this.perpage = 10;\n    this.netSub = Subscription.EMPTY;\n    this.subscriptions = [];\n    this.fuse = new Fuse(this.stack, {\n      keys: ['name', 'job', 'location']\n    });\n  }\n  ionViewDidEnter() {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.logged = yield this.auth.isLogged();\n      if (this.logged) {\n        this.state.next('loading');\n        if (this.network.is('online')) {\n          this.fetchData();\n        } else {\n          this.state.next('offline');\n          this.netSub = this.network.listen().subscribe(state => {\n            if (state === NetworkState.on) {\n              this.fetchData();\n            }\n          });\n        }\n      }\n    });\n  }\n  ionViewDidLeave() {\n    this.netSub.unsubscribe();\n    this.subscriptions.forEach(i => i.unsubscribe());\n  }\n  onSearch(pattern) {\n    if (pattern.length === 0) {\n      this.searchPattern = '';\n      this.items = [...this.stack].slice(0, this.limit);\n      return;\n    }\n    this.searchPattern = pattern;\n    const items = this.fuse.search(pattern).map(i => i.item);\n    this.items = items.slice(0, this.limit);\n  }\n  showMore() {}\n  goToProfile() {\n    this.router.navigate(['/tabs/profile']);\n  }\n  fetchData() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const id_token = yield this.auth.getIdToken();\n      const body = {\n        id_token\n      };\n      const sub = this.http.post('/me/favorites', body).subscribe({\n        next: items => {\n          if (items.length > 0) {\n            this.stack = items;\n            this.items = [...this.stack].slice(0, this.limit);\n          }\n          this.state.next('ready');\n        },\n        error: err => {\n          this.failMessage = this.app.handlingError(err, false);\n          this.state.next('failed');\n        },\n        complete: () => {\n          sub.unsubscribe();\n          this.netSub.unsubscribe();\n        }\n      });\n      this.subscriptions.push(sub);\n    });\n  }\n};\nFavoritePage.ctorParameters = () => [{\n  type: Router\n}, {\n  type: HttpClient\n}, {\n  type: AppService\n}, {\n  type: AuthService\n}, {\n  type: NetworkService\n}];\nFavoritePage = __decorate([Component({\n  selector: 'tab-favorite',\n  template: __NG_CLI_RESOURCE__0,\n  animations: [fadeTransition],\n  styles: [__NG_CLI_RESOURCE__1]\n})], FavoritePage);\nexport { FavoritePage };","map":{"version":3,"mappings":"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","names":["Component","Router","BehaviorSubject","Subscription","Fuse","fadeTransition","AppService","AuthService","NetworkService","NetworkState","HttpClient","FavoritePage","constructor","router","http","app","auth","network","defaultFailMessage","EMPTY","fuse","stack","keys","ionViewDidEnter","logged","isLogged","state","next","is","fetchData","netSub","listen","subscribe","on","ionViewDidLeave","unsubscribe","subscriptions","forEach","i","onSearch","pattern","length","searchPattern","items","slice","limit","search","map","item","showMore","goToProfile","navigate","id_token","getIdToken","body","sub","post","error","err","failMessage","handlingError","complete","push","selector","template","animations"],"sourceRoot":"","sources":["/home/digifemmes-22lab149/Bureau/soutramoi_app/src/app/pages/tabs/favorite/favorite.page.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, from, Subscription } from 'rxjs';\nimport Fuse from 'fuse.js';\n\nimport { fadeTransition } from 'src/app/animations';\nimport { AppService } from 'src/app/services/app.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { HttpService } from 'src/app/services/http.service';\nimport { NetworkService, NetworkState } from 'src/app/services/network.service';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'tab-favorite',\n  templateUrl: 'favorite.page.html',\n  styleUrls: ['favorite.page.scss'],\n  animations: [fadeTransition],\n})\nexport class FavoritePage {\n  items: Professional[] = [];\n  stack: Professional[] = [];\n\n  searchPattern = '';\n  state = new BehaviorSubject<PageState>('initial');\n  defaultFailMessage = 'Une erreur est survenue lors de la récupération des données.';\n  failMessage = this.defaultFailMessage;\n  fuse: Fuse<Professional>;\n  limit = 10;\n  logged = false;\n\n  readonly perpage = 10;\n\n  private netSub = Subscription.EMPTY;\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    public router: Router,\n    private http: HttpClient,\n    private app: AppService,\n    private auth: AuthService,\n    private network: NetworkService,\n  ) {\n    this.fuse = new Fuse<Professional>(this.stack, {\n      keys: ['name', 'job', 'location'],\n    });\n  }\n\n  async ionViewDidEnter() {\n    this.logged = await this.auth.isLogged();\n\n    if (this.logged) {\n      this.state.next('loading');\n\n      if (this.network.is('online')) {\n        this.fetchData();\n      } else {\n        this.state.next('offline');\n\n        this.netSub = this.network.listen().subscribe(state => {\n          if (state === NetworkState.on) {\n            this.fetchData();\n          }\n        });\n      }\n    }\n  }\n\n  ionViewDidLeave() {\n    this.netSub.unsubscribe();\n    this.subscriptions.forEach(i => i.unsubscribe());\n  }\n\n  onSearch(pattern: string) {\n    if (pattern.length === 0) {\n      this.searchPattern = '';\n      this.items = [...this.stack].slice(0, this.limit);\n      return;\n    }\n\n    this.searchPattern = pattern;\n\n    const items = this.fuse.search(pattern).map(i => i.item);\n    this.items = items.slice(0, this.limit);\n  }\n\n  showMore() { }\n\n  goToProfile() {\n    this.router.navigate(['/tabs/profile']);\n  }\n\n  private async fetchData() {\n    const id_token = await this.auth.getIdToken();\n    const body: any = { id_token };\n\n    const sub = this.http.post<Professional[]>('/me/favorites', body).subscribe({\n      next: items => {\n        if (items.length > 0) {\n          this.stack = items;\n          this.items = [...this.stack].slice(0, this.limit);\n        }\n\n        this.state.next('ready');\n      },\n      error: err => {\n        this.failMessage = this.app.handlingError(err, false);\n        this.state.next('failed');\n      },\n      complete: () => {\n        sub.unsubscribe();\n        this.netSub.unsubscribe();\n      },\n    });\n\n    this.subscriptions.push(sub);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}