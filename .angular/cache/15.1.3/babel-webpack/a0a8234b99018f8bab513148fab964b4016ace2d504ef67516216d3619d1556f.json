{"ast":null,"code":"import { __awaiter, __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nlet LoaderService = class LoaderService {\n  constructor() {\n    this.message = 'Chargement...';\n    this.state = false;\n    this.status = new Subject();\n    this.status = new Subject();\n  }\n  get loading() {\n    return this.state;\n  }\n  set loading(value) {\n    this.state = value;\n    this.status.next(value);\n  }\n  listen() {\n    return this.status.asObservable();\n  }\n  getMessage() {\n    return this.message;\n  }\n  setMessage(message) {\n    this.message = message;\n    this.status.next(this.state);\n  }\n  present(message) {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.message = message ? message : this.message;\n      this.loading = true;\n    });\n  }\n  dismiss() {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.loading = false;\n    });\n  }\n};\nLoaderService.ctorParameters = () => [];\nLoaderService = __decorate([Injectable({\n  providedIn: 'root'\n})], LoaderService);\nexport { LoaderService };","map":{"version":3,"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAC1C,SAASC,OAAO,QAAQ,MAAM;AAKvB,IAAMC,aAAa,GAAnB,MAAMA,aAAa;EAKxBC;IAJQ,YAAO,GAAG,eAAe;IACzB,UAAK,GAAG,KAAK;IACb,WAAM,GAAG,IAAIF,OAAO,EAAW;IAGrC,IAAI,CAACG,MAAM,GAAG,IAAIH,OAAO,EAAE;EAC7B;EAEA,IAAII,OAAO;IACT,OAAO,IAAI,CAACC,KAAK;EACnB;EAEA,IAAID,OAAO,CAACE,KAAK;IACf,IAAI,CAACD,KAAK,GAAGC,KAAK;IAClB,IAAI,CAACH,MAAM,CAACI,IAAI,CAACD,KAAK,CAAC;EACzB;EAEAE,MAAM;IACJ,OAAO,IAAI,CAACL,MAAM,CAACM,YAAY,EAAE;EACnC;EAEAC,UAAU;IACR,OAAO,IAAI,CAACC,OAAO;EACrB;EAEAC,UAAU,CAACD,OAAe;IACxB,IAAI,CAACA,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACR,MAAM,CAACI,IAAI,CAAC,IAAI,CAACF,KAAK,CAAC;EAC9B;EAEMQ,OAAO,CAACF,OAAgB;;MAC5B,IAAI,CAACA,OAAO,GAAGA,OAAO,GAAGA,OAAO,GAAG,IAAI,CAACA,OAAO;MAC/C,IAAI,CAACP,OAAO,GAAG,IAAI;IACrB,CAAC;;EAEKU,OAAO;;MACX,IAAI,CAACV,OAAO,GAAG,KAAK;IACtB,CAAC;;;;AAtCUH,aAAa,eAHzBF,UAAU,CAAC;EACVgB,UAAU,EAAE;CACb,CAAC,GACWd,aAAa,CAuCzB;SAvCYA,aAAa","names":["Injectable","Subject","LoaderService","constructor","status","loading","state","value","next","listen","asObservable","getMessage","message","setMessage","present","dismiss","providedIn"],"sourceRoot":"","sources":["/home/digifemmes-22lab149/Bureau/soutramoi_app/src/app/services/loader.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n  private message = 'Chargement...';\n  private state = false;\n  private status = new Subject<boolean>();\n\n  constructor() {\n    this.status = new Subject();\n  }\n\n  get loading(): boolean {\n    return this.state;\n  }\n\n  set loading(value) {\n    this.state = value;\n    this.status.next(value);\n  }\n\n  listen() {\n    return this.status.asObservable();\n  }\n\n  getMessage(): string {\n    return this.message;\n  }\n\n  setMessage(message: string): void {\n    this.message = message;\n    this.status.next(this.state);\n  }\n\n  async present(message?: string) {\n    this.message = message ? message : this.message;\n    this.loading = true;\n  }\n\n  async dismiss() {\n    this.loading = false;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}