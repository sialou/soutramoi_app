{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./loader.component.scss?ngResource\";\nimport { Component, ElementRef } from '@angular/core';\nimport { LoaderService } from 'src/app/services/loader.service';\nlet LoaderComponent = class LoaderComponent {\n  constructor(elm, service) {\n    this.elm = elm;\n    this.service = service;\n    this.state = false;\n    this.element = this.elm.nativeElement;\n    this.message = this.service.getMessage();\n  }\n  ngAfterViewInit() {\n    this.subscription = this.service.listen().subscribe(value => {\n      this.message = this.service.getMessage();\n      if (value) {\n        this.state = true;\n        setTimeout(() => {\n          this.element.querySelector('.loader-content').classList.remove('close');\n          this.element.querySelector('.loader-content').classList.add('open');\n        }, 50);\n      } else {\n        this.element.querySelector('.loader-content').classList.add('close');\n        this.element.querySelector('.loader-content').classList.remove('open');\n        setTimeout(() => this.state = false, 400);\n      }\n    });\n  }\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n};\nLoaderComponent.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: LoaderService\n}];\nLoaderComponent = __decorate([Component({\n  selector: 'app-loader',\n  template: `\n    <div class=\"loader-container\" *ngIf=\"state\">\n      <div class=\"loader-content\">\n        <app-spinner-infinity [secondaryColor]=\"'rgba(var(--ion-color-primary-rgb),0.15)'\"></app-spinner-infinity>\n        <div class=\"loader-message\">{{ message }}</div>\n      </div>\n    </div>\n  `,\n  styles: [__NG_CLI_RESOURCE__0]\n})], LoaderComponent);\nexport { LoaderComponent };","map":{"version":3,"mappings":";;AAAA,SAASA,SAAS,EAA4BC,UAAU,QAAQ,eAAe;AAG/E,SAASC,aAAa,QAAQ,iCAAiC;AAcxD,IAAMC,eAAe,GAArB,MAAMA,eAAe;EAO1BC,YACUC,GAAe,EACfC,OAAsB;IADtB,QAAG,GAAHD,GAAG;IACH,YAAO,GAAPC,OAAO;IARjB,UAAK,GAAG,KAAK;IAUX,IAAI,CAACC,OAAO,GAAG,IAAI,CAACF,GAAG,CAACG,aAAa;IACrC,IAAI,CAACC,OAAO,GAAG,IAAI,CAACH,OAAO,CAACI,UAAU,EAAE;EAC1C;EAEAC,eAAe;IACb,IAAI,CAACC,YAAY,GAAG,IAAI,CAACN,OAAO,CAACO,MAAM,EAAE,CAACC,SAAS,CAACC,KAAK,IAAG;MAC1D,IAAI,CAACN,OAAO,GAAG,IAAI,CAACH,OAAO,CAACI,UAAU,EAAE;MAExC,IAAIK,KAAK,EAAE;QACT,IAAI,CAACC,KAAK,GAAG,IAAI;QAEjBC,UAAU,CAAC,MAAK;UACd,IAAI,CAACV,OAAO,CAACW,aAAa,CAAC,iBAAiB,CAAC,CAACC,SAAS,CAACC,MAAM,CAAC,OAAO,CAAC;UACvE,IAAI,CAACb,OAAO,CAACW,aAAa,CAAC,iBAAiB,CAAC,CAACC,SAAS,CAACE,GAAG,CAAC,MAAM,CAAC;QACrE,CAAC,EAAE,EAAE,CAAC;OACP,MAAM;QACL,IAAI,CAACd,OAAO,CAACW,aAAa,CAAC,iBAAiB,CAAC,CAACC,SAAS,CAACE,GAAG,CAAC,OAAO,CAAC;QACpE,IAAI,CAACd,OAAO,CAACW,aAAa,CAAC,iBAAiB,CAAC,CAACC,SAAS,CAACC,MAAM,CAAC,MAAM,CAAC;QACtEH,UAAU,CAAC,MAAM,IAAI,CAACD,KAAK,GAAG,KAAK,EAAE,GAAG,CAAC;;IAE7C,CAAC,CAAC;EACJ;EAEAM,WAAW;IACT,IAAI,CAACV,YAAY,CAACW,WAAW,EAAE;EACjC;;;;;;;AApCWpB,eAAe,eAZ3BH,SAAS,CAAC;EACTwB,QAAQ,EAAE,YAAY;EAEtBC,QAAQ,EAAE;;;;;;;GAOT;;CACF,CAAC,GACWtB,eAAe,CAqC3B;SArCYA,eAAe","names":["Component","ElementRef","LoaderService","LoaderComponent","constructor","elm","service","element","nativeElement","message","getMessage","ngAfterViewInit","subscription","listen","subscribe","value","state","setTimeout","querySelector","classList","remove","add","ngOnDestroy","unsubscribe","selector","template"],"sourceRoot":"","sources":["/home/digifemmes-22lab149/Bureau/soutramoi_app/src/app/shared/loader/loader.component.ts"],"sourcesContent":["import { Component, OnDestroy, AfterViewInit, ElementRef } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { LoaderService } from 'src/app/services/loader.service';\n\n@Component({\n  selector: 'app-loader',\n  styleUrls: ['./loader.component.scss'],\n  template: `\n    <div class=\"loader-container\" *ngIf=\"state\">\n      <div class=\"loader-content\">\n        <app-spinner-infinity [secondaryColor]=\"'rgba(var(--ion-color-primary-rgb),0.15)'\"></app-spinner-infinity>\n        <div class=\"loader-message\">{{ message }}</div>\n      </div>\n    </div>\n  `\n})\nexport class LoaderComponent implements AfterViewInit, OnDestroy {\n  state = false;\n  message: string;\n\n  private subscription: Subscription;\n  private element: Element;\n\n  constructor(\n    private elm: ElementRef,\n    private service: LoaderService,\n  ) {\n    this.element = this.elm.nativeElement;\n    this.message = this.service.getMessage();\n  }\n\n  ngAfterViewInit() {\n    this.subscription = this.service.listen().subscribe(value => {\n      this.message = this.service.getMessage();\n\n      if (value) {\n        this.state = true;\n\n        setTimeout(() => {\n          this.element.querySelector('.loader-content').classList.remove('close');\n          this.element.querySelector('.loader-content').classList.add('open');\n        }, 50);\n      } else {\n        this.element.querySelector('.loader-content').classList.add('close');\n        this.element.querySelector('.loader-content').classList.remove('open');\n        setTimeout(() => this.state = false, 400);\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}