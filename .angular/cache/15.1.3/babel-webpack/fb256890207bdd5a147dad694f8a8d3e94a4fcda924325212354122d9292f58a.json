{"ast":null,"code":"import { __awaiter, __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { Platform } from '@ionic/angular';\nimport { PushNotifications } from '@capacitor/push-notifications';\nimport { LocalNotifications } from '@capacitor/local-notifications';\nimport { AuthService } from './auth.service';\nlet NotificationsService = class NotificationsService {\n  constructor(platform, auth) {\n    this.platform = platform;\n    this.auth = auth;\n    this.notifications = [];\n    this.push = PushNotifications;\n    this.local = LocalNotifications;\n    this.initialize();\n  }\n  schedule() {\n    if (!this.platform.is('hybrid')) {\n      return false;\n    }\n    this.cancel().then(() => {\n      this.initialize();\n      this.local.schedule({\n        notifications: this.notifications\n      });\n    });\n    return true;\n  }\n  requestPermission() {\n    if (!this.platform.is('hybrid')) {\n      return false;\n    }\n    this.local.checkPermissions().then(res => {\n      if (res.display !== 'granted') {\n        this.local.requestPermissions().then(req => {\n          if (req.display === 'granted') {\n            this.register();\n          }\n        });\n      } else {\n        this.register();\n      }\n    });\n    return true;\n  }\n  cancel() {\n    return this.local.cancel({\n      notifications: this.notifications\n    });\n  }\n  sendPush(notification) {\n    return this.local.schedule({\n      notifications: [notification]\n    });\n  }\n  firstTimeNotification() {\n    return this.local.schedule({\n      notifications: [{\n        id: 41,\n        title: 'Bienvenue sur la plateforme SoutraMoi !',\n        body: 'Nous sommes heureux de vous avoir parmis nous.'\n      }]\n    });\n  }\n  initialize() {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.notifications = [];\n      this.dailyNotification();\n      // this.mondayNotification();\n    });\n  }\n\n  register() {\n    this.push.register();\n  }\n  dailyNotification() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const title = yield this.getTitle();\n      this.notifications.push({\n        id: 42,\n        title,\n        body: 'N\\'hésitez pas à faire un tour sur la plateforme si vous avez besoin des services d\\'un professionel.',\n        schedule: {\n          on: {\n            hour: 9,\n            minute: 30,\n            second: 0\n          },\n          repeats: true\n        }\n      });\n    });\n  }\n  mondayNotification() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const monday = 1;\n      const time = new Date();\n      const currentDay = new Date().getDay();\n      let dayDifference = monday - currentDay;\n      const title = yield this.getTitle();\n      if (dayDifference < 0) {\n        dayDifference = dayDifference + 7;\n      }\n      time.setHours(time.getHours() + 24 * dayDifference);\n      this.notifications.push({\n        id: 43,\n        title,\n        body: 'Ça vous fera du bien de débuter la semaine avec un nouveau records.',\n        schedule: {\n          at: time,\n          repeats: true\n        }\n      });\n    });\n  }\n  getTitle() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const user = this.auth.currentUser();\n      return user !== null ? 'Bonjour ' + user.displayName + ' !' : 'Bonjour champion !';\n    });\n  }\n};\nNotificationsService.ctorParameters = () => [{\n  type: Platform\n}, {\n  type: AuthService\n}];\nNotificationsService = __decorate([Injectable({\n  providedIn: 'root'\n})], NotificationsService);\nexport { NotificationsService };","map":{"version":3,"mappings":"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","names":["Injectable","Platform","PushNotifications","LocalNotifications","AuthService","NotificationsService","constructor","platform","auth","initialize","schedule","is","cancel","then","local","notifications","requestPermission","checkPermissions","res","display","requestPermissions","req","register","sendPush","notification","firstTimeNotification","id","title","body","dailyNotification","push","getTitle","on","hour","minute","second","repeats","mondayNotification","monday","time","Date","currentDay","getDay","dayDifference","setHours","getHours","at","user","currentUser","displayName","providedIn"],"sourceRoot":"","sources":["/home/digifemmes-22lab149/Bureau/soutramoi_app/src/app/services/notifications.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Platform } from '@ionic/angular';\n\nimport { PushNotifications } from '@capacitor/push-notifications';\nimport { LocalNotifications, LocalNotificationSchema } from '@capacitor/local-notifications';\n\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationsService {\n  notifications: LocalNotificationSchema[] = [];\n\n  private push = PushNotifications;\n  private local = LocalNotifications;\n\n  constructor(\n    private platform: Platform,\n    private auth: AuthService,\n  ) {\n    this.initialize();\n  }\n\n  schedule() {\n    if (!this.platform.is('hybrid')) {\n      return false;\n    }\n\n    this.cancel().then(() => {\n      this.initialize();\n      this.local.schedule({ notifications: this.notifications });\n    });\n\n    return true;\n  }\n\n  requestPermission() {\n    if (!this.platform.is('hybrid')) {\n      return false;\n    }\n\n    this.local.checkPermissions().then(res => {\n      if (res.display !== 'granted') {\n        this.local.requestPermissions().then(req => {\n          if (req.display === 'granted') {\n            this.register();\n          }\n        });\n      } else {\n        this.register();\n      }\n    });\n\n    return true;\n  }\n\n  cancel() {\n    return this.local.cancel({ notifications: this.notifications });\n  }\n\n  sendPush(notification: LocalNotificationSchema) {\n    return this.local.schedule({ notifications: [notification] });\n  }\n\n  firstTimeNotification() {\n    return this.local.schedule({\n      notifications: [{\n        id: 41,\n        title: 'Bienvenue sur la plateforme SoutraMoi !',\n        body: 'Nous sommes heureux de vous avoir parmis nous.'\n      }]\n    });\n  }\n\n  private async initialize() {\n    this.notifications = [];\n    this.dailyNotification();\n    // this.mondayNotification();\n  }\n\n  private register() {\n    this.push.register();\n  }\n\n  private async dailyNotification() {\n    const title = await this.getTitle();\n\n    this.notifications.push({\n      id: 42,\n      title,\n      body: 'N\\'hésitez pas à faire un tour sur la plateforme si vous avez besoin des services d\\'un professionel.',\n      schedule: { on: { hour: 9, minute: 30, second: 0 }, repeats: true }\n    });\n  }\n\n  private async mondayNotification() {\n    const monday = 1;\n    const time = new Date();\n    const currentDay = new Date().getDay();\n    let dayDifference = monday - currentDay;\n    const title = await this.getTitle();\n\n    if (dayDifference < 0) {\n      dayDifference = dayDifference + 7;\n    }\n\n    time.setHours(time.getHours() + 24 * dayDifference);\n\n    this.notifications.push({\n      id: 43,\n      title,\n      body: 'Ça vous fera du bien de débuter la semaine avec un nouveau records.',\n      schedule: { at: time, repeats: true }\n    });\n  }\n\n  private async getTitle() {\n    const user = this.auth.currentUser();\n    return (user !== null) ? 'Bonjour ' + user.displayName + ' !' : 'Bonjour champion !';\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}