{"ast":null,"code":"import { __awaiter, __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./profile-pro-map.component.scss?ngResource\";\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Platform } from '@ionic/angular';\nimport { Geolocation } from '@capacitor/geolocation';\nimport { AndroidSettings, IOSSettings, NativeSettings } from 'capacitor-native-settings';\nimport { AlertService } from 'src/app/services/alert.service';\nimport { fadeTransition } from 'src/app/animations';\nimport { DEFAULT_GEO_LOCATION } from 'src/app/helpers';\nlet ProfileProMapComponent = class ProfileProMapComponent {\n  constructor(platform, alert) {\n    this.platform = platform;\n    this.alert = alert;\n    this.valueChange = new EventEmitter();\n    this.center = DEFAULT_GEO_LOCATION;\n    this.addressForm = new FormControl('');\n    this.hasPermission = false;\n    this.init = false;\n    this.subscriptions = [];\n  }\n  ngOnInit() {\n    this.addressForm.setValue(this.payload.address);\n    this.center = this.payload.geolocation || DEFAULT_GEO_LOCATION;\n    this.subscriptions.push(this.addressForm.valueChanges.subscribe(v => this.valueChange.emit(['address', v])));\n  }\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n  ready(map) {\n    map.resize();\n  }\n  changeLocation(event) {\n    const center = event.target.getCenter();\n    this.valueChange.emit(['center', center]);\n  }\n  initialize() {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.init = true;\n      const permission = yield this.getPermission();\n      if (permission) {\n        this.hasPermission = true;\n        const {\n          coords\n        } = yield Geolocation.getCurrentPosition();\n        this.center = [coords.longitude, coords.latitude];\n      } else {\n        this.hasPermission = false;\n        this.alert.present({\n          title: 'Permission',\n          text: 'Vous devez autoriser l’accès à votre position pour afficher l’itinéraire.',\n          showCancelButton: true,\n          confirmButtonText: 'Autoriser',\n          cancelButtonText: 'Annuler'\n        }).then(result => {\n          if (result.isConfirmed) {\n            if (this.platform.is('android')) {\n              NativeSettings.openAndroid({\n                option: AndroidSettings.ApplicationDetails\n              });\n            } else {\n              NativeSettings.openIOS({\n                option: IOSSettings.App\n              });\n            }\n          }\n        });\n      }\n    });\n  }\n  getPermission() {\n    return __awaiter(this, void 0, void 0, function* () {\n      let granted = false;\n      const permissions = yield Geolocation.checkPermissions();\n      if (permissions.location === 'granted') {\n        granted = true;\n      } else {\n        const status = yield Geolocation.requestPermissions();\n        if (status.location === 'granted') {\n          granted = true;\n        }\n      }\n      return granted;\n    });\n  }\n};\nProfileProMapComponent.ctorParameters = () => [{\n  type: Platform\n}, {\n  type: AlertService\n}];\nProfileProMapComponent.propDecorators = {\n  valueChange: [{\n    type: Output\n  }],\n  payload: [{\n    type: Input\n  }]\n};\nProfileProMapComponent = __decorate([Component({\n  selector: 'profile-pro-map',\n  animations: [fadeTransition],\n  template: `\n    <app-input floatLabel>\n      <input type=\"text\" id=\"address\" placeholder=\"Entrez votre adresse\" [formControl]=\"addressForm\" required>\n      <label for=\"address\">Adresse</label>\n    </app-input>\n    <h4 class=\"map-title\">Localisation sur la carte</h4>\n    <div class=\"map-viewport\">\n      <mgl-map\n        [style]=\"'mapbox://styles/mapbox/streets-v11'\"\n        [center]=\"center\"\n        [zoom]=\"[13]\"\n        [maxZoom]=\"18\"\n        [minZoom]=\"6\"\n        (mapLoad)=\"ready($event)\"\n        (moveEnd)=\"changeLocation($event)\"\n      ></mgl-map>\n\n      <img src=\"assets/img/center-pin.png\" class=\"map-pin\" alt=\"\" *ngIf=\"init\">\n\n      <div class=\"map-overlay\" @FadeTransition *ngIf=\"!init\">\n        <button type=\"button\" class=\"save\" (click)=\"initialize()\">\n          <ion-icon src=\"assets/icons/pin.svg\"></ion-icon> Definir\n        </button>\n      </div>\n    </div>\n    <p class=\"map-description\">Cliquez et faites glisser pour repositionner.</p>\n  `,\n  styles: [__NG_CLI_RESOURCE__0]\n})], ProfileProMapComponent);\nexport { ProfileProMapComponent };","map":{"version":3,"mappings":"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","names":["Component","EventEmitter","Input","Output","FormControl","Platform","Geolocation","AndroidSettings","IOSSettings","NativeSettings","AlertService","fadeTransition","DEFAULT_GEO_LOCATION","ProfileProMapComponent","constructor","platform","alert","ngOnInit","addressForm","setValue","payload","address","center","geolocation","subscriptions","push","valueChanges","subscribe","v","valueChange","emit","ngOnDestroy","forEach","sub","unsubscribe","ready","map","resize","changeLocation","event","target","getCenter","initialize","init","permission","getPermission","hasPermission","coords","getCurrentPosition","longitude","latitude","present","title","text","showCancelButton","confirmButtonText","cancelButtonText","then","result","isConfirmed","is","openAndroid","option","ApplicationDetails","openIOS","App","granted","permissions","checkPermissions","location","status","requestPermissions","selector","animations","template"],"sourceRoot":"","sources":["/home/digifemmes-22lab149/Bureau/soutramoi_app/src/app/pages/profile-pro/components/profile-pro-map.component.ts"],"sourcesContent":["import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { LngLatLike, Map } from 'mapbox-gl';\nimport { FormControl } from '@angular/forms';\nimport { Platform } from '@ionic/angular';\nimport { Subscription } from 'rxjs';\n\nimport { Geolocation } from '@capacitor/geolocation';\nimport { AndroidSettings, IOSSettings, NativeSettings } from 'capacitor-native-settings';\n\nimport { AlertService } from 'src/app/services/alert.service';\nimport { fadeTransition } from 'src/app/animations';\nimport { DEFAULT_GEO_LOCATION } from 'src/app/helpers';\n\n@Component({\n  selector: 'profile-pro-map',\n  styleUrls: ['./profile-pro-map.component.scss'],\n  animations: [fadeTransition],\n  template: `\n    <app-input floatLabel>\n      <input type=\"text\" id=\"address\" placeholder=\"Entrez votre adresse\" [formControl]=\"addressForm\" required>\n      <label for=\"address\">Adresse</label>\n    </app-input>\n    <h4 class=\"map-title\">Localisation sur la carte</h4>\n    <div class=\"map-viewport\">\n      <mgl-map\n        [style]=\"'mapbox://styles/mapbox/streets-v11'\"\n        [center]=\"center\"\n        [zoom]=\"[13]\"\n        [maxZoom]=\"18\"\n        [minZoom]=\"6\"\n        (mapLoad)=\"ready($event)\"\n        (moveEnd)=\"changeLocation($event)\"\n      ></mgl-map>\n\n      <img src=\"assets/img/center-pin.png\" class=\"map-pin\" alt=\"\" *ngIf=\"init\">\n\n      <div class=\"map-overlay\" @FadeTransition *ngIf=\"!init\">\n        <button type=\"button\" class=\"save\" (click)=\"initialize()\">\n          <ion-icon src=\"assets/icons/pin.svg\"></ion-icon> Definir\n        </button>\n      </div>\n    </div>\n    <p class=\"map-description\">Cliquez et faites glisser pour repositionner.</p>\n  `,\n})\nexport class ProfileProMapComponent implements OnInit, OnDestroy {\n  @Output() valueChange = new EventEmitter<any[]>();\n  @Input() payload: ProfessionalData;\n\n  center: LngLatLike = DEFAULT_GEO_LOCATION;\n  addressForm = new FormControl('');\n  hasPermission = false;\n  init = false;\n\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    private platform: Platform,\n    private alert: AlertService,\n  ) { }\n\n  ngOnInit() {\n    this.addressForm.setValue(this.payload.address);\n    this.center = this.payload.geolocation || DEFAULT_GEO_LOCATION;\n\n    this.subscriptions.push(\n      this.addressForm.valueChanges.subscribe(v => this.valueChange.emit(['address', v]))\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  ready(map: Map) {\n    map.resize();\n  }\n\n  changeLocation(event) {\n    const center = event.target.getCenter();\n    this.valueChange.emit(['center', center]);\n  }\n\n  async initialize() {\n    this.init = true;\n    const permission = await this.getPermission();\n\n    if (permission) {\n      this.hasPermission = true;\n      const { coords } = await Geolocation.getCurrentPosition();\n      this.center = [coords.longitude, coords.latitude];\n    } else {\n      this.hasPermission = false;\n\n      this.alert.present({\n        title: 'Permission',\n        text: 'Vous devez autoriser l’accès à votre position pour afficher l’itinéraire.',\n        showCancelButton: true,\n        confirmButtonText: 'Autoriser',\n        cancelButtonText: 'Annuler',\n      }).then(result => {\n        if (result.isConfirmed) {\n          if (this.platform.is('android')) {\n            NativeSettings.openAndroid({ option: AndroidSettings.ApplicationDetails });\n          } else {\n            NativeSettings.openIOS({ option: IOSSettings.App });\n          }\n        }\n      });\n    }\n  }\n\n  private async getPermission() {\n    let granted = false;\n    const permissions = await Geolocation.checkPermissions();\n\n    if (permissions.location === 'granted') {\n      granted = true;\n    } else {\n      const status = await Geolocation.requestPermissions();\n\n      if (status.location === 'granted') {\n        granted = true;\n      }\n    }\n\n    return granted;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}