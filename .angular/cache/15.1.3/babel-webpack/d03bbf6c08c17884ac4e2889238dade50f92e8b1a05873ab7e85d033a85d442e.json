{"ast":null,"code":"import { __awaiter, __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./profile-pro-images.component.scss?ngResource\";\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { css } from '@emotion/css';\nimport { AlertService } from 'src/app/services/alert.service';\nimport { NetworkService } from 'src/app/services/network.service';\nlet ProfileProImagesComponent = class ProfileProImagesComponent {\n  constructor(network, alert) {\n    this.network = network;\n    this.alert = alert;\n    this.valueChange = new EventEmitter();\n    this.styles = {\n      cover: css``,\n      photo: css``\n    };\n  }\n  ngOnChanges() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this.user && this.updater) {\n        this.updater.idToken = this.user.id_token;\n      }\n      if (this.user) {\n        this.styles = Object.assign(this.styles, {\n          cover: css`\n          background-image: url(${this.user.cover_url});\n        `,\n          photo: css`\n          background-image: url(${this.user.photo_url});\n        `\n        });\n      }\n    });\n  }\n  pickImage(type) {\n    if (this.network.is('offline')) {\n      this.alert.present('Veuillez vérifier votre connexion internet.');\n      return;\n    }\n    this.updater.pick(type);\n  }\n  changeImage(user) {\n    const slug = this.updater.type;\n    this.styles[slug] = css`\n      background-image: url(${user[slug + '_url']});\n    `;\n    this.valueChange.emit(user);\n  }\n};\nProfileProImagesComponent.ctorParameters = () => [{\n  type: NetworkService\n}, {\n  type: AlertService\n}];\nProfileProImagesComponent.propDecorators = {\n  valueChange: [{\n    type: Output\n  }],\n  user: [{\n    type: Input\n  }]\n};\nProfileProImagesComponent = __decorate([Component({\n  selector: 'profile-pro-images',\n  template: `\n    <div class=\"card-images-cover\" [class]=\"styles.cover\">\n      <button type=\"button\" class=\"with-text\" (click)=\"pickImage('cover')\">\n        <ion-icon src=\"assets/icons/camera.svg\"></ion-icon> Choisir une image de converture\n      </button>\n    </div>\n    <div class=\"card-images-photo-container\">\n      <div class=\"card-images-photo\" [class]=\"styles.photo\">\n        <button type=\"button\" (click)=\"pickImage('photo')\">\n          <ion-icon src=\"assets/icons/camera.svg\"></ion-icon>\n        </button>\n      </div>\n    </div>\n\n    <app-picture-updater\n      (ready)=\"updater = $event\"\n      (valueChange)=\"changeImage($event)\"\n    ></app-picture-updater>\n  `,\n  styles: [__NG_CLI_RESOURCE__0]\n})], ProfileProImagesComponent);\nexport { ProfileProImagesComponent };","map":{"version":3,"mappings":";;AAAA,SAASA,SAAS,EAAEC,YAAY,EAAEC,KAAK,EAAaC,MAAM,QAAQ,eAAe;AACjF,SAASC,GAAG,QAAQ,cAAc;AAElC,SAASC,YAAY,QAAQ,gCAAgC;AAC7D,SAASC,cAAc,QAAQ,kCAAkC;AA0B1D,IAAMC,yBAAyB,GAA/B,MAAMA,yBAAyB;EAWpCC,YACUC,OAAuB,EACvBC,KAAmB;IADnB,YAAO,GAAPD,OAAO;IACP,UAAK,GAALC,KAAK;IAZL,gBAAW,GAAG,IAAIT,YAAY,EAAQ;IAKhD,WAAM,GAAG;MACPU,KAAK,EAAEP,GAAG,EAAE;MACZQ,KAAK,EAAER,GAAG;KACX;EAKG;EAEES,WAAW;;MACf,IAAI,IAAI,CAACC,IAAI,IAAI,IAAI,CAACC,OAAO,EAAE;QAC7B,IAAI,CAACA,OAAO,CAACC,OAAO,GAAG,IAAI,CAACF,IAAI,CAACG,QAAQ;;MAG3C,IAAI,IAAI,CAACH,IAAI,EAAE;QACb,IAAI,CAACI,MAAM,GAAGC,MAAM,CAACC,MAAM,CAAC,IAAI,CAACF,MAAM,EAAE;UACvCP,KAAK,EAAEP,GAAG;kCACgB,IAAI,CAACU,IAAI,CAACO,SAAS;SAC5C;UACDT,KAAK,EAAER,GAAG;kCACgB,IAAI,CAACU,IAAI,CAACQ,SAAS;;SAE9C,CAAC;;IAEN,CAAC;;EAEDC,SAAS,CAACC,IAAI;IACZ,IAAI,IAAI,CAACf,OAAO,CAACgB,EAAE,CAAC,SAAS,CAAC,EAAE;MAC9B,IAAI,CAACf,KAAK,CAACgB,OAAO,CAAC,6CAA6C,CAAC;MACjE;;IAGF,IAAI,CAACX,OAAO,CAACY,IAAI,CAACH,IAAI,CAAC;EACzB;EAEAI,WAAW,CAACd,IAAU;IACpB,MAAMe,IAAI,GAAG,IAAI,CAACd,OAAO,CAACS,IAAI;IAE9B,IAAI,CAACN,MAAM,CAACW,IAAI,CAAC,GAAGzB,GAAG;8BACGU,IAAI,CAACe,IAAI,GAAG,MAAM,CAAC;KAC5C;IAED,IAAI,CAACC,WAAW,CAACC,IAAI,CAACjB,IAAI,CAAC;EAC7B;;;;;;;;;UAjDCX;EAAM;;UACND;EAAK;;AAFKK,yBAAyB,eAvBrCP,SAAS,CAAC;EACTgC,QAAQ,EAAE,oBAAoB;EAE9BC,QAAQ,EAAE;;;;;;;;;;;;;;;;;;GAkBT;;CACF,CAAC,GACW1B,yBAAyB,CAmDrC;SAnDYA,yBAAyB","names":["Component","EventEmitter","Input","Output","css","AlertService","NetworkService","ProfileProImagesComponent","constructor","network","alert","cover","photo","ngOnChanges","user","updater","idToken","id_token","styles","Object","assign","cover_url","photo_url","pickImage","type","is","present","pick","changeImage","slug","valueChange","emit","selector","template"],"sourceRoot":"","sources":["/home/digifemmes-22lab149/Bureau/soutramoi_app/src/app/pages/profile-pro/components/profile-pro-images.component.ts"],"sourcesContent":["import { Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\nimport { css } from '@emotion/css';\n\nimport { AlertService } from 'src/app/services/alert.service';\nimport { NetworkService } from 'src/app/services/network.service';\nimport { PictureUpdaterComponent } from 'src/app/shared/picture-updater/picture-updater.component';\n\n@Component({\n  selector: 'profile-pro-images',\n  styleUrls: ['./profile-pro-images.component.scss'],\n  template: `\n    <div class=\"card-images-cover\" [class]=\"styles.cover\">\n      <button type=\"button\" class=\"with-text\" (click)=\"pickImage('cover')\">\n        <ion-icon src=\"assets/icons/camera.svg\"></ion-icon> Choisir une image de converture\n      </button>\n    </div>\n    <div class=\"card-images-photo-container\">\n      <div class=\"card-images-photo\" [class]=\"styles.photo\">\n        <button type=\"button\" (click)=\"pickImage('photo')\">\n          <ion-icon src=\"assets/icons/camera.svg\"></ion-icon>\n        </button>\n      </div>\n    </div>\n\n    <app-picture-updater\n      (ready)=\"updater = $event\"\n      (valueChange)=\"changeImage($event)\"\n    ></app-picture-updater>\n  `,\n})\nexport class ProfileProImagesComponent implements OnChanges {\n  @Output() valueChange = new EventEmitter<User>();\n  @Input() user: User;\n\n  updater: PictureUpdaterComponent;\n\n  styles = {\n    cover: css``,\n    photo: css``,\n  };\n\n  constructor(\n    private network: NetworkService,\n    private alert: AlertService,\n  ) { }\n\n  async ngOnChanges() {\n    if (this.user && this.updater) {\n      this.updater.idToken = this.user.id_token;\n    }\n\n    if (this.user) {\n      this.styles = Object.assign(this.styles, {\n        cover: css`\n          background-image: url(${this.user.cover_url});\n        `,\n        photo: css`\n          background-image: url(${this.user.photo_url});\n        `,\n      });\n    }\n  }\n\n  pickImage(type) {\n    if (this.network.is('offline')) {\n      this.alert.present('Veuillez vérifier votre connexion internet.');\n      return;\n    }\n\n    this.updater.pick(type);\n  }\n\n  changeImage(user: User) {\n    const slug = this.updater.type;\n\n    this.styles[slug] = css`\n      background-image: url(${user[slug + '_url']});\n    `;\n\n    this.valueChange.emit(user);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}