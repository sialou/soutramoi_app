{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\nimport { tap } from 'rxjs/operators';\nimport { StorageService } from '../services/storage.service';\nimport { AuthService } from '../services/auth.service';\nlet AuthTokenInterceptor = class AuthTokenInterceptor {\n  constructor(storage, auth) {\n    this.storage = storage;\n    this.auth = auth;\n  }\n  intercept(request, next) {\n    const name = this.auth.TokenHeaderName;\n    return next.handle(request).pipe(tap({\n      next: event => {\n        if (event instanceof HttpResponse && event.headers.has(name)) {\n          this.storage.set(this.auth.TokenKey, event.headers.get(name));\n        }\n      }\n    }));\n  }\n};\nAuthTokenInterceptor.ctorParameters = () => [{\n  type: StorageService\n}, {\n  type: AuthService\n}];\nAuthTokenInterceptor = __decorate([Injectable()], AuthTokenInterceptor);\nexport { AuthTokenInterceptor };","map":{"version":3,"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAC1C,SAAoDC,YAAY,QAAQ,sBAAsB;AAC9F,SAASC,GAAG,QAAQ,gBAAgB;AAEpC,SAASC,cAAc,QAAQ,6BAA6B;AAC5D,SAASC,WAAW,QAAQ,0BAA0B;AAG/C,IAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAC/BC,YACUC,OAAuB,EACvBC,IAAiB;IADjB,YAAO,GAAPD,OAAO;IACP,SAAI,GAAJC,IAAI;EACV;EAEJC,SAAS,CAACC,OAAyB,EAAEC,IAAiB;IACpD,MAAMC,IAAI,GAAG,IAAI,CAACJ,IAAI,CAACK,eAAe;IAEtC,OAAOF,IAAI,CAACG,MAAM,CAACJ,OAAO,CAAC,CAACK,IAAI,CAACb,GAAG,CAAC;MACnCS,IAAI,EAAEK,KAAK,IAAG;QACZ,IAAIA,KAAK,YAAYf,YAAY,IAAIe,KAAK,CAACC,OAAO,CAACC,GAAG,CAACN,IAAI,CAAC,EAAE;UAC5D,IAAI,CAACL,OAAO,CAACY,GAAG,CAAC,IAAI,CAACX,IAAI,CAACY,QAAQ,EAAEJ,KAAK,CAACC,OAAO,CAACI,GAAG,CAACT,IAAI,CAAC,CAAC;;MAEjE;KACD,CAAC,CAAC;EACL;;;;;;;AAhBWP,oBAAoB,eADhCL,UAAU,EAAE,GACAK,oBAAoB,CAiBhC;SAjBYA,oBAAoB","names":["Injectable","HttpResponse","tap","StorageService","AuthService","AuthTokenInterceptor","constructor","storage","auth","intercept","request","next","name","TokenHeaderName","handle","pipe","event","headers","has","set","TokenKey","get"],"sourceRoot":"","sources":["/home/digifemmes-22lab149/Bureau/soutramoi_app/src/app/helpers/auth-token.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpInterceptor, HttpResponse } from '@angular/common/http';\nimport { tap } from 'rxjs/operators';\n\nimport { StorageService } from '../services/storage.service';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable()\nexport class AuthTokenInterceptor implements HttpInterceptor {\n  constructor(\n    private storage: StorageService,\n    private auth: AuthService,\n  ) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler) {\n    const name = this.auth.TokenHeaderName;\n\n    return next.handle(request).pipe(tap({\n      next: event => {\n        if (event instanceof HttpResponse && event.headers.has(name)) {\n          this.storage.set(this.auth.TokenKey, event.headers.get(name));\n        }\n      }\n    }));\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}