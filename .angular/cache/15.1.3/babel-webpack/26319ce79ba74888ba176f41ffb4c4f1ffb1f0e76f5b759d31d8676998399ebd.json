{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { Platform } from '@ionic/angular';\nimport { getAnalytics, logEvent, setUserId, setAnalyticsCollectionEnabled, setCurrentScreen } from '@angular/fire/analytics';\nimport { FirebaseAnalytics } from '@capacitor-community/firebase-analytics';\nlet AnalyticsService = class AnalyticsService {\n  constructor(platform) {\n    this.platform = platform;\n    this.nativeAnalytics = FirebaseAnalytics;\n    this.instance = getAnalytics();\n  }\n  setEnable(enabled) {\n    if (this.platform.is('hybrid')) {\n      this.nativeAnalytics.setCollectionEnabled({\n        enabled\n      });\n    } else {\n      setAnalyticsCollectionEnabled(this.instance, enabled);\n    }\n  }\n  setUserId(id, options) {\n    if (this.platform.is('hybrid')) {\n      this.nativeAnalytics.setUserId({\n        userId: id\n      });\n    } else {\n      setUserId(this.instance, id, options);\n    }\n  }\n  logEvent(name, params) {\n    if (this.platform.is('hybrid')) {\n      this.nativeAnalytics.logEvent({\n        name,\n        params\n      });\n    } else {\n      logEvent(this.instance, name, params);\n    }\n  }\n  setScreenName(name, params) {\n    if (this.platform.is('hybrid')) {\n      this.nativeAnalytics.setScreenName({\n        screenName: name\n      });\n    } else {\n      setCurrentScreen(this.instance, name, params);\n    }\n  }\n};\nAnalyticsService.ctorParameters = () => [{\n  type: Platform\n}];\nAnalyticsService = __decorate([Injectable({\n  providedIn: 'root'\n})], AnalyticsService);\nexport { AnalyticsService };","map":{"version":3,"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAC1C,SAASC,QAAQ,QAAQ,gBAAgB;AAEzC,SAASC,YAAY,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,6BAA6B,EAAEC,gBAAgB,QAAQ,yBAAyB;AAC5H,SAASC,iBAAiB,QAAQ,yCAAyC;AAKpE,IAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAI3BC,YAAoBC,QAAkB;IAAlB,aAAQ,GAARA,QAAQ;IAHpB,oBAAe,GAAGH,iBAAiB;IACnC,aAAQ,GAAGL,YAAY,EAAE;EAES;EAE1CS,SAAS,CAACC,OAAgB;IACxB,IAAI,IAAI,CAACF,QAAQ,CAACG,EAAE,CAAC,QAAQ,CAAC,EAAE;MAC9B,IAAI,CAACC,eAAe,CAACC,oBAAoB,CAAC;QAAEH;MAAO,CAAE,CAAC;KACvD,MAAM;MACLP,6BAA6B,CAAC,IAAI,CAACW,QAAQ,EAAEJ,OAAO,CAAC;;EAEzD;EAEAR,SAAS,CAACa,EAAU,EAAEC,OAAa;IACjC,IAAI,IAAI,CAACR,QAAQ,CAACG,EAAE,CAAC,QAAQ,CAAC,EAAE;MAC9B,IAAI,CAACC,eAAe,CAACV,SAAS,CAAC;QAAEe,MAAM,EAAEF;MAAE,CAAE,CAAC;KAC/C,MAAM;MACLb,SAAS,CAAC,IAAI,CAACY,QAAQ,EAAEC,EAAE,EAAEC,OAAO,CAAC;;EAEzC;EAEAf,QAAQ,CAACiB,IAAY,EAAEC,MAA+B;IACpD,IAAI,IAAI,CAACX,QAAQ,CAACG,EAAE,CAAC,QAAQ,CAAC,EAAE;MAC9B,IAAI,CAACC,eAAe,CAACX,QAAQ,CAAC;QAAEiB,IAAI;QAAEC;MAAM,CAAE,CAAC;KAChD,MAAM;MACLlB,QAAQ,CAAC,IAAI,CAACa,QAAQ,EAAEI,IAAI,EAAEC,MAAM,CAAC;;EAEzC;EAEAC,aAAa,CAACF,IAAY,EAAEC,MAAY;IACtC,IAAI,IAAI,CAACX,QAAQ,CAACG,EAAE,CAAC,QAAQ,CAAC,EAAE;MAC9B,IAAI,CAACC,eAAe,CAACQ,aAAa,CAAC;QAAEC,UAAU,EAAEH;MAAI,CAAE,CAAC;KACzD,MAAM;MACLd,gBAAgB,CAAC,IAAI,CAACU,QAAQ,EAAEI,IAAI,EAAEC,MAAM,CAAC;;EAEjD;;;;;AApCWb,gBAAgB,eAH5BR,UAAU,CAAC;EACVwB,UAAU,EAAE;CACb,CAAC,GACWhB,gBAAgB,CAqC5B;SArCYA,gBAAgB","names":["Injectable","Platform","getAnalytics","logEvent","setUserId","setAnalyticsCollectionEnabled","setCurrentScreen","FirebaseAnalytics","AnalyticsService","constructor","platform","setEnable","enabled","is","nativeAnalytics","setCollectionEnabled","instance","id","options","userId","name","params","setScreenName","screenName","providedIn"],"sourceRoot":"","sources":["/home/digifemmes-22lab149/Bureau/soutramoi_app/src/app/services/analytics.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Platform } from '@ionic/angular';\n\nimport { getAnalytics, logEvent, setUserId, setAnalyticsCollectionEnabled, setCurrentScreen } from '@angular/fire/analytics';\nimport { FirebaseAnalytics } from '@capacitor-community/firebase-analytics';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AnalyticsService {\n  private nativeAnalytics = FirebaseAnalytics;\n  private instance = getAnalytics();\n\n  constructor(private platform: Platform) { }\n\n  setEnable(enabled: boolean) {\n    if (this.platform.is('hybrid')) {\n      this.nativeAnalytics.setCollectionEnabled({ enabled });\n    } else {\n      setAnalyticsCollectionEnabled(this.instance, enabled);\n    }\n  }\n\n  setUserId(id: string, options?: any) {\n    if (this.platform.is('hybrid')) {\n      this.nativeAnalytics.setUserId({ userId: id });\n    } else {\n      setUserId(this.instance, id, options);\n    }\n  }\n\n  logEvent(name: string, params?: { [key: string]: any }) {\n    if (this.platform.is('hybrid')) {\n      this.nativeAnalytics.logEvent({ name, params });\n    } else {\n      logEvent(this.instance, name, params);\n    }\n  }\n\n  setScreenName(name: string, params?: any) {\n    if (this.platform.is('hybrid')) {\n      this.nativeAnalytics.setScreenName({ screenName: name });\n    } else {\n      setCurrentScreen(this.instance, name, params);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}