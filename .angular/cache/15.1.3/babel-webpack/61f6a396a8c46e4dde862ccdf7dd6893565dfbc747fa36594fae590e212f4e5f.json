{"ast":null,"code":"import _asyncToGenerator from \"/home/digifemmes-22lab149/Bureau/soutramoi_app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { WebPlugin } from \"@capacitor/core\";\nexport class FirebaseAnalyticsWeb extends WebPlugin {\n  constructor() {\n    super();\n    this.not_supported_mssg = \"This method is not supported\";\n    this.options_missing_mssg = \"Firebase options are missing\";\n    this.duplicate_app_mssg = \"Firebase app already exists\";\n    this.analytics_missing_mssg = \"Firebase analytics is not initialized. Make sure initializeFirebase() is called once\";\n    this.scripts = [{\n      key: \"firebase-app\",\n      src: \"https://www.gstatic.com/firebasejs/8.2.3/firebase-app.js\"\n    }, {\n      key: \"firebase-ac\",\n      src: \"https://www.gstatic.com/firebasejs/8.2.3/firebase-analytics.js\"\n    }];\n    this.ready = new Promise(resolve => this.readyResolver = resolve);\n    this.configure();\n  }\n  /**\n   * Configure and Initialize FirebaseApp if not present\n   * @param options - web app's Firebase configuration\n   * @returns firebase analytics object reference\n   * Platform: Web\n   */\n  initializeFirebase(options) {\n    var _this = this;\n    return new Promise( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (resolve, reject) {\n        yield _this.ready;\n        if (_this.hasFirebaseInitialized()) {\n          reject(_this.duplicate_app_mssg);\n          return;\n        }\n        if (!options) {\n          reject(_this.options_missing_mssg);\n          return;\n        }\n        const app = window.firebase.initializeApp(options);\n        _this.analyticsRef = app.analytics();\n        resolve(_this.analyticsRef);\n      });\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n  }\n  /**\n   * Sets the user ID property.\n   * @param options - userId: unique identifier of the user to log\n   * Platform: Web/Android/iOS\n   */\n  setUserId(options) {\n    var _this2 = this;\n    return new Promise( /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(function* (resolve, reject) {\n        yield _this2.ready;\n        if (!_this2.analyticsRef) {\n          reject(_this2.analytics_missing_mssg);\n          return;\n        }\n        const {\n          userId\n        } = options || {\n          userId: undefined\n        };\n        if (!userId) {\n          reject(\"userId property is missing\");\n          return;\n        }\n        _this2.analyticsRef.setUserId(userId);\n        resolve();\n      });\n      return function (_x3, _x4) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n  }\n  /**\n   * Sets a user property to a given value.\n   * @param options - name: The name of the user property to set.\n   *                  value: The value of the user property.\n   * Platform: Web/Android/iOS\n   */\n  setUserProperty(options) {\n    var _this3 = this;\n    return new Promise( /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator(function* (resolve, reject) {\n        yield _this3.ready;\n        if (!_this3.analyticsRef) {\n          reject(_this3.analytics_missing_mssg);\n          return;\n        }\n        const {\n          name,\n          value\n        } = options || {\n          name: undefined,\n          value: undefined\n        };\n        if (!name) {\n          reject(\"name property is missing\");\n          return;\n        }\n        if (!value) {\n          reject(\"value property is missing\");\n          return;\n        }\n        let property = {};\n        property[name] = value;\n        _this3.analyticsRef.setUserProperties(property);\n        resolve();\n      });\n      return function (_x5, _x6) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n  }\n  /**\n   * Retrieves the app instance id from the service.\n   * @returns - instanceId: current instance if of the app\n   * Platform: Web/Android/iOS\n   */\n  getAppInstanceId() {\n    return new Promise((resolve, _reject) => resolve);\n  }\n  /**\n   * Sets the current screen name, which specifies the current visual context in your app.\n   * @param options - screenName: the activity to which the screen name and class name apply.\n   *                  nameOverride: the name of the current screen. Set to null to clear the current screen name.\n   * Platform: Android/iOS\n   */\n  setScreenName(_options) {\n    return new Promise((resolve, _reject) => resolve);\n  }\n  /**\n   * Clears all analytics data for this app from the device and resets the app instance id.\n   * Platform: Android/iOS\n   */\n  reset() {\n    return new Promise((resolve, _reject) => resolve);\n  }\n  /**\n   * Logs an app event.\n   * @param options - name: unique name of the event\n   *                  params: the map of event parameters.\n   * Platform: Web/Android/iOS\n   */\n  logEvent(options) {\n    var _this4 = this;\n    return new Promise( /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator(function* (resolve, reject) {\n        yield _this4.ready;\n        if (!_this4.analyticsRef) {\n          reject(_this4.analytics_missing_mssg);\n          return;\n        }\n        const {\n          name,\n          params\n        } = options || {\n          name: undefined,\n          params: undefined\n        };\n        if (!name) {\n          reject(\"name property is missing\");\n          return;\n        }\n        _this4.analyticsRef.logEvent(name, params);\n        resolve();\n      });\n      return function (_x7, _x8) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n  }\n  /**\n   * Sets whether analytics collection is enabled for this app on this device.\n   * @param options - enabled: boolean true/false to enable/disable logging\n   * Platform: Web/Android/iOS\n   */\n  setCollectionEnabled(options) {\n    var _this5 = this;\n    return new Promise( /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator(function* (resolve, reject) {\n        yield _this5.ready;\n        if (!_this5.analyticsRef) {\n          reject(_this5.analytics_missing_mssg);\n          return;\n        }\n        const {\n          enabled\n        } = options || {\n          enabled: false\n        };\n        _this5.analyticsRef.setAnalyticsCollectionEnabled(enabled);\n        resolve();\n      });\n      return function (_x9, _x10) {\n        return _ref5.apply(this, arguments);\n      };\n    }());\n  }\n  /**\n   * Sets the duration of inactivity that terminates the current session.\n   * @param options - duration: duration of inactivity\n   * Platform: Android/iOS\n   */\n  setSessionTimeoutDuration(_options) {\n    return new Promise((_resolve, reject) => {\n      reject(this.not_supported_mssg);\n    });\n  }\n  /**\n   * Returns analytics reference object\n   */\n  get remoteConfig() {\n    return this.analyticsRef;\n  }\n  enable() {\n    var _this6 = this;\n    return new Promise( /*#__PURE__*/function () {\n      var _ref6 = _asyncToGenerator(function* (resolve, reject) {\n        yield _this6.ready;\n        if (!_this6.analyticsRef) {\n          reject(_this6.analytics_missing_mssg);\n          return;\n        }\n        _this6.analyticsRef.setAnalyticsCollectionEnabled(true);\n        resolve();\n      });\n      return function (_x11, _x12) {\n        return _ref6.apply(this, arguments);\n      };\n    }());\n  }\n  disable() {\n    var _this7 = this;\n    return new Promise( /*#__PURE__*/function () {\n      var _ref7 = _asyncToGenerator(function* (resolve, reject) {\n        yield _this7.ready;\n        if (!_this7.analyticsRef) {\n          reject(_this7.analytics_missing_mssg);\n          return;\n        }\n        _this7.analyticsRef.setAnalyticsCollectionEnabled(false);\n        resolve();\n      });\n      return function (_x13, _x14) {\n        return _ref7.apply(this, arguments);\n      };\n    }());\n  }\n  /**\n   * Ready resolver to check and load firebase analytics\n   */\n  configure() {\n    var _this8 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        yield _this8.loadScripts();\n        if (window.firebase && window.firebase.analytics && _this8.hasFirebaseInitialized()) {\n          _this8.analyticsRef = window.firebase.analytics();\n        }\n      } catch (error) {\n        throw error;\n      }\n      const interval = setInterval(() => {\n        if (!window.firebase) {\n          return;\n        }\n        clearInterval(interval);\n        _this8.readyResolver();\n      }, 50);\n    })();\n  }\n  /**\n   * Check for existing loaded script and load new scripts\n   */\n  loadScripts() {\n    var _this9 = this;\n    const firebaseAppScript = this.scripts[0];\n    const firebaseAnalyticsScript = this.scripts[1];\n    return new Promise( /*#__PURE__*/function () {\n      var _ref8 = _asyncToGenerator(function* (resolve, _reject) {\n        const scripts = _this9.scripts.map(script => script.key);\n        if (document.getElementById(scripts[0]) && document.getElementById(scripts[1])) {\n          return resolve(null);\n        }\n        yield _this9.loadScript(firebaseAppScript.key, firebaseAppScript.src);\n        yield _this9.loadScript(firebaseAnalyticsScript.key, firebaseAnalyticsScript.src);\n        resolve(null);\n      });\n      return function (_x15, _x16) {\n        return _ref8.apply(this, arguments);\n      };\n    }());\n  }\n  /**\n   * Loaded single script with provided id and source\n   * @param id - unique identifier of the script\n   * @param src - source of the script\n   */\n  loadScript(id, src) {\n    return new Promise((resolve, reject) => {\n      const file = document.createElement(\"script\");\n      file.type = \"text/javascript\";\n      file.src = src;\n      file.id = id;\n      file.onload = resolve;\n      file.onerror = reject;\n      document.querySelector(\"head\").appendChild(file);\n    });\n  }\n  /**\n   * Returns true/false if firebase object reference exists inside window\n   */\n  hasFirebaseInitialized() {\n    if (!window.firebase) {\n      return false;\n    }\n    const firebaseApps = window.firebase.apps;\n    if (firebaseApps && firebaseApps.length === 0) {\n      return false;\n    }\n    return true;\n  }\n}","map":{"version":3,"names":["WebPlugin","FirebaseAnalyticsWeb","constructor","not_supported_mssg","options_missing_mssg","duplicate_app_mssg","analytics_missing_mssg","scripts","key","src","ready","Promise","resolve","readyResolver","configure","initializeFirebase","options","reject","hasFirebaseInitialized","app","window","firebase","initializeApp","analyticsRef","analytics","setUserId","userId","undefined","setUserProperty","name","value","property","setUserProperties","getAppInstanceId","_reject","setScreenName","_options","reset","logEvent","params","setCollectionEnabled","enabled","setAnalyticsCollectionEnabled","setSessionTimeoutDuration","_resolve","remoteConfig","enable","disable","loadScripts","error","interval","setInterval","clearInterval","firebaseAppScript","firebaseAnalyticsScript","map","script","document","getElementById","loadScript","id","file","createElement","type","onload","onerror","querySelector","appendChild","firebaseApps","apps","length"],"sources":["/home/digifemmes-22lab149/Bureau/soutramoi_app/node_modules/@capacitor-community/firebase-analytics/dist/esm/web.js"],"sourcesContent":["import { WebPlugin } from \"@capacitor/core\";\nexport class FirebaseAnalyticsWeb extends WebPlugin {\n    constructor() {\n        super();\n        this.not_supported_mssg = \"This method is not supported\";\n        this.options_missing_mssg = \"Firebase options are missing\";\n        this.duplicate_app_mssg = \"Firebase app already exists\";\n        this.analytics_missing_mssg = \"Firebase analytics is not initialized. Make sure initializeFirebase() is called once\";\n        this.scripts = [\n            {\n                key: \"firebase-app\",\n                src: \"https://www.gstatic.com/firebasejs/8.2.3/firebase-app.js\",\n            },\n            {\n                key: \"firebase-ac\",\n                src: \"https://www.gstatic.com/firebasejs/8.2.3/firebase-analytics.js\",\n            },\n        ];\n        this.ready = new Promise((resolve) => (this.readyResolver = resolve));\n        this.configure();\n    }\n    /**\n     * Configure and Initialize FirebaseApp if not present\n     * @param options - web app's Firebase configuration\n     * @returns firebase analytics object reference\n     * Platform: Web\n     */\n    initializeFirebase(options) {\n        return new Promise(async (resolve, reject) => {\n            await this.ready;\n            if (this.hasFirebaseInitialized()) {\n                reject(this.duplicate_app_mssg);\n                return;\n            }\n            if (!options) {\n                reject(this.options_missing_mssg);\n                return;\n            }\n            const app = window.firebase.initializeApp(options);\n            this.analyticsRef = app.analytics();\n            resolve(this.analyticsRef);\n        });\n    }\n    /**\n     * Sets the user ID property.\n     * @param options - userId: unique identifier of the user to log\n     * Platform: Web/Android/iOS\n     */\n    setUserId(options) {\n        return new Promise(async (resolve, reject) => {\n            await this.ready;\n            if (!this.analyticsRef) {\n                reject(this.analytics_missing_mssg);\n                return;\n            }\n            const { userId } = options || { userId: undefined };\n            if (!userId) {\n                reject(\"userId property is missing\");\n                return;\n            }\n            this.analyticsRef.setUserId(userId);\n            resolve();\n        });\n    }\n    /**\n     * Sets a user property to a given value.\n     * @param options - name: The name of the user property to set.\n     *                  value: The value of the user property.\n     * Platform: Web/Android/iOS\n     */\n    setUserProperty(options) {\n        return new Promise(async (resolve, reject) => {\n            await this.ready;\n            if (!this.analyticsRef) {\n                reject(this.analytics_missing_mssg);\n                return;\n            }\n            const { name, value } = options || { name: undefined, value: undefined };\n            if (!name) {\n                reject(\"name property is missing\");\n                return;\n            }\n            if (!value) {\n                reject(\"value property is missing\");\n                return;\n            }\n            let property = {};\n            property[name] = value;\n            this.analyticsRef.setUserProperties(property);\n            resolve();\n        });\n    }\n    /**\n     * Retrieves the app instance id from the service.\n     * @returns - instanceId: current instance if of the app\n     * Platform: Web/Android/iOS\n     */\n    getAppInstanceId() {\n        return new Promise((resolve, _reject) => resolve);\n    }\n    /**\n     * Sets the current screen name, which specifies the current visual context in your app.\n     * @param options - screenName: the activity to which the screen name and class name apply.\n     *                  nameOverride: the name of the current screen. Set to null to clear the current screen name.\n     * Platform: Android/iOS\n     */\n    setScreenName(_options) {\n        return new Promise((resolve, _reject) => resolve);\n    }\n    /**\n     * Clears all analytics data for this app from the device and resets the app instance id.\n     * Platform: Android/iOS\n     */\n    reset() {\n        return new Promise((resolve, _reject) => resolve);\n    }\n    /**\n     * Logs an app event.\n     * @param options - name: unique name of the event\n     *                  params: the map of event parameters.\n     * Platform: Web/Android/iOS\n     */\n    logEvent(options) {\n        return new Promise(async (resolve, reject) => {\n            await this.ready;\n            if (!this.analyticsRef) {\n                reject(this.analytics_missing_mssg);\n                return;\n            }\n            const { name, params } = options || {\n                name: undefined,\n                params: undefined,\n            };\n            if (!name) {\n                reject(\"name property is missing\");\n                return;\n            }\n            this.analyticsRef.logEvent(name, params);\n            resolve();\n        });\n    }\n    /**\n     * Sets whether analytics collection is enabled for this app on this device.\n     * @param options - enabled: boolean true/false to enable/disable logging\n     * Platform: Web/Android/iOS\n     */\n    setCollectionEnabled(options) {\n        return new Promise(async (resolve, reject) => {\n            await this.ready;\n            if (!this.analyticsRef) {\n                reject(this.analytics_missing_mssg);\n                return;\n            }\n            const { enabled } = options || { enabled: false };\n            this.analyticsRef.setAnalyticsCollectionEnabled(enabled);\n            resolve();\n        });\n    }\n    /**\n     * Sets the duration of inactivity that terminates the current session.\n     * @param options - duration: duration of inactivity\n     * Platform: Android/iOS\n     */\n    setSessionTimeoutDuration(_options) {\n        return new Promise((_resolve, reject) => {\n            reject(this.not_supported_mssg);\n        });\n    }\n    /**\n     * Returns analytics reference object\n     */\n    get remoteConfig() {\n        return this.analyticsRef;\n    }\n    enable() {\n        return new Promise(async (resolve, reject) => {\n            await this.ready;\n            if (!this.analyticsRef) {\n                reject(this.analytics_missing_mssg);\n                return;\n            }\n            this.analyticsRef.setAnalyticsCollectionEnabled(true);\n            resolve();\n        });\n    }\n    disable() {\n        return new Promise(async (resolve, reject) => {\n            await this.ready;\n            if (!this.analyticsRef) {\n                reject(this.analytics_missing_mssg);\n                return;\n            }\n            this.analyticsRef.setAnalyticsCollectionEnabled(false);\n            resolve();\n        });\n    }\n    /**\n     * Ready resolver to check and load firebase analytics\n     */\n    async configure() {\n        try {\n            await this.loadScripts();\n            if (window.firebase &&\n                window.firebase.analytics &&\n                this.hasFirebaseInitialized()) {\n                this.analyticsRef = window.firebase.analytics();\n            }\n        }\n        catch (error) {\n            throw error;\n        }\n        const interval = setInterval(() => {\n            if (!window.firebase) {\n                return;\n            }\n            clearInterval(interval);\n            this.readyResolver();\n        }, 50);\n    }\n    /**\n     * Check for existing loaded script and load new scripts\n     */\n    loadScripts() {\n        const firebaseAppScript = this.scripts[0];\n        const firebaseAnalyticsScript = this.scripts[1];\n        return new Promise(async (resolve, _reject) => {\n            const scripts = this.scripts.map((script) => script.key);\n            if (document.getElementById(scripts[0]) &&\n                document.getElementById(scripts[1])) {\n                return resolve(null);\n            }\n            await this.loadScript(firebaseAppScript.key, firebaseAppScript.src);\n            await this.loadScript(firebaseAnalyticsScript.key, firebaseAnalyticsScript.src);\n            resolve(null);\n        });\n    }\n    /**\n     * Loaded single script with provided id and source\n     * @param id - unique identifier of the script\n     * @param src - source of the script\n     */\n    loadScript(id, src) {\n        return new Promise((resolve, reject) => {\n            const file = document.createElement(\"script\");\n            file.type = \"text/javascript\";\n            file.src = src;\n            file.id = id;\n            file.onload = resolve;\n            file.onerror = reject;\n            document.querySelector(\"head\").appendChild(file);\n        });\n    }\n    /**\n     * Returns true/false if firebase object reference exists inside window\n     */\n    hasFirebaseInitialized() {\n        if (!window.firebase) {\n            return false;\n        }\n        const firebaseApps = window.firebase.apps;\n        if (firebaseApps && firebaseApps.length === 0) {\n            return false;\n        }\n        return true;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}