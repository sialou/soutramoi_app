{"ast":null,"code":"import { __awaiter, __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./pro-works.component.scss?ngResource\";\nimport { Component, Input, ViewChild } from '@angular/core';\nlet ProWorksComponent = class ProWorksComponent {\n  constructor() {\n    this.items = [];\n    this.gridItems = [];\n    this.slideItems = [];\n    this.activeSlide = 0;\n    this.open = false;\n    this.swiperConfig = {\n      slidesPerView: 1,\n      initialSlide: 0,\n      enabled: false,\n      autoplay: false,\n      loop: false\n    };\n  }\n  ngOnInit() {\n    this.items = ['assets/img/work1.jpeg', 'assets/img/cover.jpg', 'assets/img/cover.jpg', 'assets/img/work1.jpeg', 'assets/img/work1.jpeg', 'assets/img/cover.jpg', 'assets/img/work1.jpeg', 'assets/img/cover.jpg', 'assets/img/work1.jpeg', 'assets/img/cover.jpg'];\n    this.gridItems = this.items.slice(0, 9);\n  }\n  ngOnDestroy() {}\n  onDidEnter() {\n    this.slideItems = this.items;\n    this.swiper.enable();\n    this.swiper.slideTo(this.activeSlide);\n  }\n  onDidLeave() {\n    this.swiper.disable();\n    this.slideItems = [];\n  }\n  present(slide = 0) {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.activeSlide = slide;\n      yield this.modal.present();\n      this.open = true;\n      return this.onDidEnter();\n    });\n  }\n  dismiss() {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.modal.dismiss();\n      this.open = false;\n      return this.onDidLeave();\n    });\n  }\n};\nProWorksComponent.ctorParameters = () => [];\nProWorksComponent.propDecorators = {\n  modal: [{\n    type: ViewChild,\n    args: ['modalWorks']\n  }],\n  profile: [{\n    type: Input\n  }]\n};\nProWorksComponent = __decorate([Component({\n  selector: 'pro-works',\n  template: `\n    <div class=\"inner\" *ngIf=\"items.length > 0\">\n      <div class=\"profile-heading\">\n        Projets & réalisations\n        <ng-container *ngIf=\"gridItems.length > 1\">\n          <button type=\"button\" class=\"after\" (click)=\"present()\">\n            <ion-icon src=\"assets/icons/arrow-back.svg\"></ion-icon>\n          </button>\n        </ng-container>\n      </div>\n      <div class=\"works-content grid-{{gridItems.length}}nth\">\n        <ng-container *ngFor=\"let item of gridItems; let i = index\">\n          <div class=\"item\" [style.background-image]=\"'url(' + item + ')'\" (click)=\"present(i)\"></div>\n        </ng-container>\n      </div>\n      <div class=\"works-more\" *ngIf=\"gridItems.length > 1\">\n        <button type=\"button\" (click)=\"present()\">Voir plus</button>\n      </div>\n    </div>\n\n    <ion-modal #modalWorks [isOpen]=\"false\">\n      <ng-template>\n        <ion-content>\n          <app-navbar [end]=\"false\" [titleCentered]=\"false\">\n            <button type=\"button\" slot=\"start\" (click)=\"dismiss()\">\n              <ion-icon src=\"assets/icons/back.svg\"></ion-icon>\n            </button>\n            <div class=\"profile-user\" slot=\"center\">\n              <app-avatar [url]=\"profile.photoUrl\" [size]=\"35\"></app-avatar>\n              <div class=\"info\">\n                <h4 slot=\"center\">{{ profile.name }}</h4>\n                <h5 slot=\"center\">{{ profile.job }}</h5>\n              </div>\n            </div>\n          </app-navbar>\n          <div class=\"slider-content\">\n            <swiper [config]=\"swiperConfig\" (swiper)=\"swiper = $event\">\n              <ng-template swiperSlide *ngFor=\"let item of slideItems; let i = index\">\n                <div class=\"slide-item\">\n                  <img [src]=\"item\" [alt]=\"'Work ' + (i + 1)\">\n                </div>\n              </ng-template>\n            </swiper>\n          </div>\n        </ion-content>\n      </ng-template>\n    </ion-modal>\n  `,\n  styles: [__NG_CLI_RESOURCE__0]\n})], ProWorksComponent);\nexport { ProWorksComponent };","map":{"version":3,"mappings":";;AAAA,SAASA,SAAS,EAAEC,KAAK,EAAqBC,SAAS,QAAQ,eAAe;AAwDvE,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAmB5BC;IAdA,UAAK,GAAa,EAAE;IACpB,cAAS,GAAa,EAAE;IACxB,eAAU,GAAa,EAAE;IACzB,gBAAW,GAAG,CAAC;IACf,SAAI,GAAG,KAAK;IAEZ,iBAAY,GAAkB;MAC5BC,aAAa,EAAE,CAAC;MAChBC,YAAY,EAAE,CAAC;MACfC,OAAO,EAAE,KAAK;MACdC,QAAQ,EAAE,KAAK;MACfC,IAAI,EAAE;KACP;EAEe;EAEhBC,QAAQ;IACN,IAAI,CAACC,KAAK,GAAG,CACX,uBAAuB,EACvB,sBAAsB,EACtB,sBAAsB,EACtB,uBAAuB,EACvB,uBAAuB,EACvB,sBAAsB,EACtB,uBAAuB,EACvB,sBAAsB,EACtB,uBAAuB,EACvB,sBAAsB,CACvB;IACD,IAAI,CAACC,SAAS,GAAG,IAAI,CAACD,KAAK,CAACE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;EACzC;EAEAC,WAAW,IAAK;EAEhBC,UAAU;IACR,IAAI,CAACC,UAAU,GAAG,IAAI,CAACL,KAAK;IAC5B,IAAI,CAACM,MAAM,CAACC,MAAM,EAAE;IACpB,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC,IAAI,CAACC,WAAW,CAAC;EACvC;EAEAC,UAAU;IACR,IAAI,CAACJ,MAAM,CAACK,OAAO,EAAE;IACrB,IAAI,CAACN,UAAU,GAAG,EAAE;EACtB;EAEMO,OAAO,CAACC,KAAK,GAAG,CAAC;;MACrB,IAAI,CAACJ,WAAW,GAAGI,KAAK;MACxB,MAAM,IAAI,CAACC,KAAK,CAACF,OAAO,EAAE;MAC1B,IAAI,CAACG,IAAI,GAAG,IAAI;MAEhB,OAAO,IAAI,CAACX,UAAU,EAAE;IAC1B,CAAC;;EAEKY,OAAO;;MACX,MAAM,IAAI,CAACF,KAAK,CAACE,OAAO,EAAE;MAC1B,IAAI,CAACD,IAAI,GAAG,KAAK;MAEjB,OAAO,IAAI,CAACL,UAAU,EAAE;IAC1B,CAAC;;;;;;UA9DAnB,SAAS;IAAA0B,OAAC,YAAY;EAAA;;UACtB3B;EAAK;;AAFKE,iBAAiB,eApD7BH,SAAS,CAAC;EACT6B,QAAQ,EAAE,WAAW;EAErBC,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA+CT;;CACF,CAAC,GACW3B,iBAAiB,CAgE7B;SAhEYA,iBAAiB","names":["Component","Input","ViewChild","ProWorksComponent","constructor","slidesPerView","initialSlide","enabled","autoplay","loop","ngOnInit","items","gridItems","slice","ngOnDestroy","onDidEnter","slideItems","swiper","enable","slideTo","activeSlide","onDidLeave","disable","present","slide","modal","open","dismiss","args","selector","template"],"sourceRoot":"","sources":["/home/digifemmes-22lab149/Bureau/soutramoi_app/src/app/pages/pro/components/pro-works.component.ts"],"sourcesContent":["import { Component, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { IonModal } from '@ionic/angular';\nimport { Swiper, SwiperOptions } from 'swiper';\n\n@Component({\n  selector: 'pro-works',\n  styleUrls: ['./pro-works.component.scss'],\n  template: `\n    <div class=\"inner\" *ngIf=\"items.length > 0\">\n      <div class=\"profile-heading\">\n        Projets & réalisations\n        <ng-container *ngIf=\"gridItems.length > 1\">\n          <button type=\"button\" class=\"after\" (click)=\"present()\">\n            <ion-icon src=\"assets/icons/arrow-back.svg\"></ion-icon>\n          </button>\n        </ng-container>\n      </div>\n      <div class=\"works-content grid-{{gridItems.length}}nth\">\n        <ng-container *ngFor=\"let item of gridItems; let i = index\">\n          <div class=\"item\" [style.background-image]=\"'url(' + item + ')'\" (click)=\"present(i)\"></div>\n        </ng-container>\n      </div>\n      <div class=\"works-more\" *ngIf=\"gridItems.length > 1\">\n        <button type=\"button\" (click)=\"present()\">Voir plus</button>\n      </div>\n    </div>\n\n    <ion-modal #modalWorks [isOpen]=\"false\">\n      <ng-template>\n        <ion-content>\n          <app-navbar [end]=\"false\" [titleCentered]=\"false\">\n            <button type=\"button\" slot=\"start\" (click)=\"dismiss()\">\n              <ion-icon src=\"assets/icons/back.svg\"></ion-icon>\n            </button>\n            <div class=\"profile-user\" slot=\"center\">\n              <app-avatar [url]=\"profile.photoUrl\" [size]=\"35\"></app-avatar>\n              <div class=\"info\">\n                <h4 slot=\"center\">{{ profile.name }}</h4>\n                <h5 slot=\"center\">{{ profile.job }}</h5>\n              </div>\n            </div>\n          </app-navbar>\n          <div class=\"slider-content\">\n            <swiper [config]=\"swiperConfig\" (swiper)=\"swiper = $event\">\n              <ng-template swiperSlide *ngFor=\"let item of slideItems; let i = index\">\n                <div class=\"slide-item\">\n                  <img [src]=\"item\" [alt]=\"'Work ' + (i + 1)\">\n                </div>\n              </ng-template>\n            </swiper>\n          </div>\n        </ion-content>\n      </ng-template>\n    </ion-modal>\n  `,\n})\nexport class ProWorksComponent implements OnInit, OnDestroy {\n  @ViewChild('modalWorks') modal: IonModal;\n  @Input() profile: Professional;\n\n  swiper: Swiper;\n  items: string[] = [];\n  gridItems: string[] = [];\n  slideItems: string[] = [];\n  activeSlide = 0;\n  open = false;\n\n  swiperConfig: SwiperOptions = {\n    slidesPerView: 1,\n    initialSlide: 0,\n    enabled: false,\n    autoplay: false,\n    loop: false,\n  };\n\n  constructor() { }\n\n  ngOnInit() {\n    this.items = [\n      'assets/img/work1.jpeg',\n      'assets/img/cover.jpg',\n      'assets/img/cover.jpg',\n      'assets/img/work1.jpeg',\n      'assets/img/work1.jpeg',\n      'assets/img/cover.jpg',\n      'assets/img/work1.jpeg',\n      'assets/img/cover.jpg',\n      'assets/img/work1.jpeg',\n      'assets/img/cover.jpg',\n    ];\n    this.gridItems = this.items.slice(0, 9);\n  }\n\n  ngOnDestroy() { }\n\n  onDidEnter() {\n    this.slideItems = this.items;\n    this.swiper.enable();\n    this.swiper.slideTo(this.activeSlide);\n  }\n\n  onDidLeave() {\n    this.swiper.disable();\n    this.slideItems = [];\n  }\n\n  async present(slide = 0) {\n    this.activeSlide = slide;\n    await this.modal.present();\n    this.open = true;\n\n    return this.onDidEnter();\n  }\n\n  async dismiss() {\n    await this.modal.dismiss();\n    this.open = false;\n\n    return this.onDidLeave();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}