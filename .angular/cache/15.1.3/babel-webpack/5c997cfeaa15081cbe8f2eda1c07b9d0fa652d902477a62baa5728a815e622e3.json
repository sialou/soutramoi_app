{"ast":null,"code":"import { __awaiter, __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./profile-pro.page.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./profile-pro.page.scss?ngResource\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\nimport { DEFAULT_GEO_LOCATION } from 'src/app/helpers';\nimport { AlertService } from 'src/app/services/alert.service';\nimport { AppService } from 'src/app/services/app.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { HttpService } from 'src/app/services/http.service';\nimport { LoaderService } from 'src/app/services/loader.service';\nimport { NetworkService } from 'src/app/services/network.service';\nlet ProfileProPage = class ProfileProPage {\n  constructor(app, alert, auth, http, loader, network) {\n    this.app = app;\n    this.alert = alert;\n    this.auth = auth;\n    this.http = http;\n    this.loader = loader;\n    this.network = network;\n    this.products = [];\n    this.services = [];\n    this.user = null;\n    this.defaultGeoLocation = DEFAULT_GEO_LOCATION;\n    this.state = new BehaviorSubject('loading');\n    this.payload = {\n      job_id: null,\n      address: null,\n      company_name: null,\n      description: null,\n      geolocation: null,\n      services: [],\n      products: []\n    };\n    this.subscriptions = [];\n    this.form = new FormGroup({\n      job: new FormControl(''),\n      address: new FormControl(''),\n      companyName: new FormControl(''),\n      description: new FormControl('')\n    });\n  }\n  ngOnInit() {\n    return __awaiter(this, void 0, void 0, function* () {});\n  }\n  ionViewDidEnter() {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.initialize();\n    });\n  }\n  ionViewDidLeave() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n  picturechange(user) {\n    this.user = user;\n    this.auth.setUser(user);\n  }\n  valueChange(slug, value) {\n    if (slug === 'job') {\n      this.form.controls.job.setValue(value);\n    } else if (slug === 'address') {\n      this.form.controls.address.setValue(value);\n    } else if (slug === 'company') {\n      this.form.controls.companyName.setValue(value);\n    } else if (slug === 'description') {\n      this.form.controls.description.setValue(value);\n    } else if (slug === 'products') {\n      this.products = value;\n    } else if (slug === 'services') {\n      console.log(value);\n      this.services = value;\n    } else if (slug === 'geolocation') {\n      this.geoLocation = value;\n    }\n  }\n  submit() {\n    if (!this.form.valid) {\n      return;\n    }\n    if (this.products.length === 0) {\n      this.alert.present('Veuillez choisir au moins un produit.');\n      return;\n    }\n    if (this.services.length === 0) {\n      this.alert.present('Veuillez choisir au moins un service.');\n      return;\n    }\n    if (!this.geoLocation || this.geoLocation.length !== 2) {\n      this.alert.present('Veuillez définir votre localisation.');\n      return;\n    }\n    const coords = this.geoLocation.join('@');\n    if (!coords.match(/^(-?\\d+(\\.\\d+)?)@\\s*(-?\\d+(\\.\\d+)?)$/g)) {\n      this.alert.present('Veuillez définir votre localisation exacte.');\n      return;\n    }\n    const body = Object.assign(Object.assign({}, this.form.value), {\n      products: this.products,\n      services: this.services,\n      geolocation: coords\n    });\n    console.log(body);\n    if (this.network.is('offline')) {\n      this.alert.present('Veuillez vérifier votre connexion internet.');\n      return;\n    }\n    // this.loader.present('Mise à jour en cours...');\n    // const sub = from(this.http.post('/profile/prefessional', body)).subscribe({\n    //   next: (user: User) => {\n    //     this.loader.dismiss();\n    //     this.alert.present('Votre profil a été mis à jour.');\n    //     this.auth.setUser(user);\n    //   },\n    //   error: (err) => this.app.handlingError(err),\n    // });\n    // this.subscriptions.push(sub);\n  }\n\n  initialize() {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.user = yield this.auth.getUser();\n      if (this.user.professional) {\n        this.payload = this.user.professional;\n      }\n      this.state.next('ready');\n    });\n  }\n};\nProfileProPage.ctorParameters = () => [{\n  type: AppService\n}, {\n  type: AlertService\n}, {\n  type: AuthService\n}, {\n  type: HttpService\n}, {\n  type: LoaderService\n}, {\n  type: NetworkService\n}];\nProfileProPage = __decorate([Component({\n  selector: 'app-profile-pro',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], ProfileProPage);\nexport { ProfileProPage };","map":{"version":3,"mappings":"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","names":["Component","FormControl","FormGroup","BehaviorSubject","DEFAULT_GEO_LOCATION","AlertService","AppService","AuthService","HttpService","LoaderService","NetworkService","ProfileProPage","constructor","app","alert","auth","http","loader","network","job_id","address","company_name","description","geolocation","services","products","form","job","companyName","ngOnInit","ionViewDidEnter","initialize","ionViewDidLeave","subscriptions","forEach","sub","unsubscribe","picturechange","user","setUser","valueChange","slug","value","controls","setValue","console","log","geoLocation","submit","valid","length","present","coords","join","match","body","is","getUser","professional","payload","state","next","selector","template"],"sourceRoot":"","sources":["/home/digifemmes-22lab149/Bureau/soutramoi_app/src/app/pages/profile-pro/profile-pro.page.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { BehaviorSubject, from, Subscription } from 'rxjs';\n\nimport { DEFAULT_GEO_LOCATION } from 'src/app/helpers';\nimport { AlertService } from 'src/app/services/alert.service';\nimport { AppService } from 'src/app/services/app.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { HttpService } from 'src/app/services/http.service';\nimport { LoaderService } from 'src/app/services/loader.service';\nimport { NetworkService } from 'src/app/services/network.service';\n\n@Component({\n  selector: 'app-profile-pro',\n  templateUrl: './profile-pro.page.html',\n  styleUrls: ['./profile-pro.page.scss'],\n})\nexport class ProfileProPage implements OnInit {\n  form: FormGroup;\n  products: string[] = [];\n  services: string[] = [];\n  geoLocation: number[];\n\n  user: User = null;\n  defaultGeoLocation = DEFAULT_GEO_LOCATION;\n  state = new BehaviorSubject<PageState>('loading');\n\n  payload: ProfessionalData = {\n    job_id: null,\n    address: null,\n    company_name: null,\n    description: null,\n    geolocation: null,\n    services: [],\n    products: [],\n  };\n\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    private app: AppService,\n    private alert: AlertService,\n    private auth: AuthService,\n    private http: HttpService,\n    private loader: LoaderService,\n    private network: NetworkService,\n  ) {\n    this.form = new FormGroup({\n      job: new FormControl(''),\n      address: new FormControl(''),\n      companyName: new FormControl(''),\n      description: new FormControl(''),\n    });\n  }\n\n  async ngOnInit() { }\n\n  async ionViewDidEnter() {\n    await this.initialize();\n  }\n\n  ionViewDidLeave() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  picturechange(user: User) {\n    this.user = user;\n    this.auth.setUser(user);\n  }\n\n  valueChange(slug: string, value: any) {\n    if (slug === 'job') {\n      this.form.controls.job.setValue(value);\n    } else if (slug === 'address') {\n      this.form.controls.address.setValue(value);\n    } else if (slug === 'company') {\n      this.form.controls.companyName.setValue(value);\n    } else if (slug === 'description') {\n      this.form.controls.description.setValue(value);\n    } else if (slug === 'products') {\n      this.products = value;\n    } else if (slug === 'services') {\n      console.log(value);\n      this.services = value;\n    } else if (slug === 'geolocation') {\n      this.geoLocation = value;\n    }\n  }\n\n  submit() {\n    if (!this.form.valid) {\n      return;\n    }\n\n    if (this.products.length === 0) {\n      this.alert.present('Veuillez choisir au moins un produit.');\n      return;\n    }\n\n    if (this.services.length === 0) {\n      this.alert.present('Veuillez choisir au moins un service.');\n      return;\n    }\n\n    if (!this.geoLocation || this.geoLocation.length !== 2) {\n      this.alert.present('Veuillez définir votre localisation.');\n      return;\n    }\n\n    const coords = this.geoLocation.join('@');\n\n    if (!coords.match(/^(-?\\d+(\\.\\d+)?)@\\s*(-?\\d+(\\.\\d+)?)$/g)) {\n      this.alert.present('Veuillez définir votre localisation exacte.');\n      return;\n    }\n\n    const body = {\n      ...this.form.value,\n      products: this.products,\n      services: this.services,\n      geolocation: coords,\n    };\n\n    console.log(body);\n\n    if (this.network.is('offline')) {\n      this.alert.present('Veuillez vérifier votre connexion internet.');\n      return;\n    }\n\n    // this.loader.present('Mise à jour en cours...');\n\n    // const sub = from(this.http.post('/profile/prefessional', body)).subscribe({\n    //   next: (user: User) => {\n    //     this.loader.dismiss();\n    //     this.alert.present('Votre profil a été mis à jour.');\n    //     this.auth.setUser(user);\n    //   },\n    //   error: (err) => this.app.handlingError(err),\n    // });\n\n    // this.subscriptions.push(sub);\n  }\n\n  private async initialize() {\n    this.user = await this.auth.getUser();\n\n    if (this.user.professional) {\n      this.payload = this.user.professional;\n    }\n\n    this.state.next('ready');\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}