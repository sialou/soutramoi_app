{"ast":null,"code":"import { __awaiter, __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./picture-updater.component.scss?ngResource\";\nimport { Component, EventEmitter, Output, ViewChild } from \"@angular/core\";\nimport { SwalPortalTargets } from \"@sweetalert2/ngx-sweetalert2\";\nimport { FilePicker } from \"@robingenz/capacitor-file-picker\";\nimport { BehaviorSubject, from } from \"rxjs\";\nimport Croppie from \"croppie\";\nimport { css } from \"@emotion/css\";\nimport { fadeTransition } from \"src/app/animations\";\nimport { AppService } from \"src/app/services/app.service\";\nimport { HttpService } from \"src/app/services/http.service\";\nimport { AlertService } from \"src/app/services/alert.service\";\nlet PictureUpdaterComponent = class PictureUpdaterComponent {\n  constructor(swalTargets, app, http, alert) {\n    this.swalTargets = swalTargets;\n    this.app = app;\n    this.http = http;\n    this.alert = alert;\n    this.ready = new EventEmitter();\n    this.valueChange = new EventEmitter();\n    this.file = null;\n    this.cropper = null;\n    this.finish = false;\n    this.type = \"photo\";\n    this.state = new BehaviorSubject(\"init\");\n    this.styles = {\n      portal: css`\n      position: relative;\n    `,\n      popup: css`\n      width: 80% !important;\n    `,\n      preview: css``,\n      actions: css`\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      flex-direction: column;\n      margin-top: 20px;\n      text-align: center;\n    `,\n      cancel: css`\n      display: inline-block;\n      margin-top: 15px;\n      padding: 8px 20px;\n      width: auto;\n      height: auto;\n      background: transparent;\n      border: none;\n      color: rgba(var(--ion-color-secondary-rgb), 0.5);\n    `,\n      loading: css`\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      flex-direction: column;\n      position: absolute;\n      z-index: 10;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      background-color: #ffffff;\n    `,\n      loadingMessage: css`\n      margin-top: 20px;\n      text-align: center;\n      font-size: 14px;\n      font-weight: 500;\n    `\n    };\n    this.subscriptions = [];\n  }\n  ngAfterViewInit() {\n    this.ready.emit(this);\n  }\n  ngOnDestroy() {\n    if (this.cropper) {\n      this.cropper.destroy();\n    }\n    this.unsubscribe();\n  }\n  pick(type) {\n    this.type = type;\n    this.cropInit();\n    FilePicker.pickFiles({\n      types: [\"image/png\", \"image/jpeg\", \"image/jpg\"],\n      multiple: false\n    }).then(result => {\n      if (result.files.length > 0) {\n        this.file = result.files[0];\n        this.modal.fire();\n      }\n    }, err => this.app.handlingError(err));\n  }\n  submit() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const data = yield this.cropper.result({\n        type: \"base64\",\n        format: \"jpeg\",\n        quality: 1,\n        size: {\n          width: 512,\n          height: this.type === \"photo\" ? 512 : 247\n        }\n      });\n      const body = {\n        id_token: this.idToken\n      };\n      if (this.type === \"photo\") {\n        body.photo = data;\n      } else {\n        body.cover = data;\n      }\n      this.state.next(\"loading\");\n      const sub = from(this.http.post(\"/me/profile/pictures\", body)).subscribe({\n        next: user => {\n          this.state.next(\"done\");\n          this.valueChange.emit(user);\n          this.unsubscribe();\n          this.alert.present(\"Photo de profil mise à jour\");\n        },\n        error: err => {\n          this.state.next(\"error\");\n          this.unsubscribe();\n          this.app.handlingError(err);\n        }\n      });\n      this.subscriptions.push(sub);\n    });\n  }\n  cancel() {\n    this.unsubscribe();\n    this.modal.close();\n  }\n  cropInit() {\n    if (this.cropper) {\n      this.cropper.destroy();\n    }\n    const sub = this.modal.didOpen.subscribe(() => {\n      const element = document.getElementById(\"profile-cropper\");\n      const cropper = new Croppie(element, {\n        enableZoom: true,\n        enableResize: false,\n        enableOrientation: false,\n        viewport: {\n          type: \"square\",\n          width: 150,\n          height: this.type === \"photo\" ? 150 : 73\n        }\n      });\n      cropper.bind({\n        url: `data:${this.file.mimeType};base64,${this.file.data}`,\n        orientation: 1\n      }).then(() => this.finish = true);\n      this.cropper = cropper;\n      const bundary = document.querySelector(\".croppie-container .cr-boundary\");\n      if (bundary) {\n        bundary.classList.remove(this.type === \"photo\" ? \"cover\" : \"photo\");\n        bundary.classList.add(this.type);\n      }\n    });\n    this.subscriptions.push(sub);\n  }\n  unsubscribe() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n};\nPictureUpdaterComponent.ctorParameters = () => [{\n  type: SwalPortalTargets\n}, {\n  type: AppService\n}, {\n  type: HttpService\n}, {\n  type: AlertService\n}];\nPictureUpdaterComponent.propDecorators = {\n  modal: [{\n    type: ViewChild,\n    args: [\"modal\"]\n  }],\n  ready: [{\n    type: Output\n  }],\n  valueChange: [{\n    type: Output\n  }]\n};\nPictureUpdaterComponent = __decorate([Component({\n  selector: \"app-picture-updater\",\n  animations: [fadeTransition],\n  template: `\n    <swal\n      #modal\n      title=\"Photo de profil\"\n      [heightAuto]=\"false\"\n      [showConfirmButton]=\"false\"\n      [allowOutsideClick]=\"false\"\n      [customClass]=\"styles.popup\"\n    >\n      <section *swalPortal=\"swalTargets.confirmButton\" [class]=\"styles.portal\">\n        <div>\n          <div id=\"profile-cropper\" [class]=\"styles.preview\"></div>\n          <div [class]=\"styles.actions\">\n            <button\n              type=\"button\"\n              app-button\n              color=\"secondary\"\n              [disabled]=\"!finish\"\n              (click)=\"submit()\"\n            >\n              Mèttre à jour\n            </button>\n            <button type=\"button\" (click)=\"cancel()\" [class]=\"styles.cancel\">\n              Annuler\n            </button>\n          </div>\n        </div>\n        <div @FadeTransition [class]=\"styles.loading\" *ngIf=\"state.value === 'loading'\">\n          <app-spinner-infinity\n            [width]=\"100\"\n            [secondaryColor]=\"'rgba(var(--ion-color-primary-rgb),0.15)'\"\n          ></app-spinner-infinity>\n          <div [class]=\"styles.loadingMessage\">Mise à jour en cours...</div>\n        </div>\n      </section>\n    </swal>\n  `,\n  styles: [__NG_CLI_RESOURCE__0]\n})], PictureUpdaterComponent);\nexport { PictureUpdaterComponent };","map":{"version":3,"mappings":"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","names":["Component","EventEmitter","Output","ViewChild","SwalPortalTargets","FilePicker","BehaviorSubject","from","Croppie","css","fadeTransition","AppService","HttpService","AlertService","PictureUpdaterComponent","constructor","swalTargets","app","http","alert","portal","popup","preview","actions","cancel","loading","loadingMessage","ngAfterViewInit","ready","emit","ngOnDestroy","cropper","destroy","unsubscribe","pick","type","cropInit","pickFiles","types","multiple","then","result","files","length","file","modal","fire","err","handlingError","submit","data","format","quality","size","width","height","body","id_token","idToken","photo","cover","state","next","sub","post","subscribe","user","valueChange","present","error","subscriptions","push","close","didOpen","element","document","getElementById","enableZoom","enableResize","enableOrientation","viewport","bind","url","mimeType","orientation","finish","bundary","querySelector","classList","remove","add","forEach","args","selector","animations","template"],"sourceRoot":"","sources":["/home/digifemmes-22lab149/Bureau/soutramoi_app/src/app/shared/picture-updater/picture-updater.component.ts"],"sourcesContent":["import {\n  AfterViewInit,\n  Component,\n  EventEmitter,\n  OnDestroy,\n  Output,\n  ViewChild,\n} from \"@angular/core\";\nimport { SwalComponent, SwalPortalTargets } from \"@sweetalert2/ngx-sweetalert2\";\nimport { FilePicker, File as PickerFile } from \"@robingenz/capacitor-file-picker\";\nimport { SweetAlertCustomClass } from \"sweetalert2\";\nimport { BehaviorSubject, from, Subscription } from \"rxjs\";\nimport Croppie from \"croppie\";\nimport { css } from \"@emotion/css\";\n\nimport { fadeTransition } from \"src/app/animations\";\nimport { AppService } from \"src/app/services/app.service\";\nimport { HttpService } from \"src/app/services/http.service\";\nimport { AlertService } from \"src/app/services/alert.service\";\n\ntype ComponentState = \"loading\" | \"done\" | \"error\" | \"init\";\n\n@Component({\n  selector: \"app-picture-updater\",\n  styleUrls: [\"./picture-updater.component.scss\"],\n  animations: [fadeTransition],\n  template: `\n    <swal\n      #modal\n      title=\"Photo de profil\"\n      [heightAuto]=\"false\"\n      [showConfirmButton]=\"false\"\n      [allowOutsideClick]=\"false\"\n      [customClass]=\"styles.popup\"\n    >\n      <section *swalPortal=\"swalTargets.confirmButton\" [class]=\"styles.portal\">\n        <div>\n          <div id=\"profile-cropper\" [class]=\"styles.preview\"></div>\n          <div [class]=\"styles.actions\">\n            <button\n              type=\"button\"\n              app-button\n              color=\"secondary\"\n              [disabled]=\"!finish\"\n              (click)=\"submit()\"\n            >\n              Mèttre à jour\n            </button>\n            <button type=\"button\" (click)=\"cancel()\" [class]=\"styles.cancel\">\n              Annuler\n            </button>\n          </div>\n        </div>\n        <div @FadeTransition [class]=\"styles.loading\" *ngIf=\"state.value === 'loading'\">\n          <app-spinner-infinity\n            [width]=\"100\"\n            [secondaryColor]=\"'rgba(var(--ion-color-primary-rgb),0.15)'\"\n          ></app-spinner-infinity>\n          <div [class]=\"styles.loadingMessage\">Mise à jour en cours...</div>\n        </div>\n      </section>\n    </swal>\n  `,\n})\nexport class PictureUpdaterComponent implements OnDestroy, AfterViewInit {\n  @ViewChild(\"modal\") readonly modal!: SwalComponent;\n  @Output() ready = new EventEmitter<PictureUpdaterComponent>();\n  @Output() valueChange = new EventEmitter<User>();\n\n  idToken: string;\n  file: PickerFile = null;\n  cropper: Croppie = null;\n  finish = false;\n  type: \"photo\" | \"cover\" = \"photo\";\n  state = new BehaviorSubject<ComponentState>(\"init\");\n\n  styles = {\n    portal: css`\n      position: relative;\n    `,\n    popup: css`\n      width: 80% !important;\n    ` as SweetAlertCustomClass,\n    preview: css``,\n    actions: css`\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      flex-direction: column;\n      margin-top: 20px;\n      text-align: center;\n    `,\n    cancel: css`\n      display: inline-block;\n      margin-top: 15px;\n      padding: 8px 20px;\n      width: auto;\n      height: auto;\n      background: transparent;\n      border: none;\n      color: rgba(var(--ion-color-secondary-rgb), 0.5);\n    `,\n    loading: css`\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      flex-direction: column;\n      position: absolute;\n      z-index: 10;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      background-color: #ffffff;\n    `,\n    loadingMessage: css`\n      margin-top: 20px;\n      text-align: center;\n      font-size: 14px;\n      font-weight: 500;\n    `,\n  };\n\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    public readonly swalTargets: SwalPortalTargets,\n    private app: AppService,\n    private http: HttpService,\n    private alert: AlertService\n  ) {}\n\n  ngAfterViewInit() {\n    this.ready.emit(this);\n  }\n\n  ngOnDestroy() {\n    if (this.cropper) {\n      this.cropper.destroy();\n    }\n\n    this.unsubscribe();\n  }\n\n  pick(type: \"photo\" | \"cover\") {\n    this.type = type;\n    this.cropInit();\n\n    FilePicker.pickFiles({\n      types: [\"image/png\", \"image/jpeg\", \"image/jpg\"],\n      multiple: false,\n    }).then(\n      (result) => {\n        if (result.files.length > 0) {\n          this.file = result.files[0];\n          this.modal.fire();\n        }\n      },\n      (err) => this.app.handlingError(err)\n    );\n  }\n\n  async submit() {\n    const data = await this.cropper.result({\n      type: \"base64\",\n      format: \"jpeg\",\n      quality: 1,\n      size: {\n        width: 512,\n        height: this.type === \"photo\" ? 512 : 247,\n      },\n    });\n\n    const body: any = { id_token: this.idToken };\n\n    if (this.type === \"photo\") {\n      body.photo = data;\n    } else {\n      body.cover = data;\n    }\n\n    this.state.next(\"loading\");\n\n    const sub = from(this.http.post(\"/me/profile/pictures\", body)).subscribe({\n      next: (user: User) => {\n        this.state.next(\"done\");\n        this.valueChange.emit(user);\n        this.unsubscribe();\n        this.alert.present(\"Photo de profil mise à jour\");\n      },\n      error: (err) => {\n        this.state.next(\"error\");\n        this.unsubscribe();\n        this.app.handlingError(err);\n      },\n    });\n\n    this.subscriptions.push(sub);\n  }\n\n  cancel() {\n    this.unsubscribe();\n    this.modal.close();\n  }\n\n  private cropInit() {\n    if (this.cropper) {\n      this.cropper.destroy();\n    }\n\n    const sub = this.modal.didOpen.subscribe(() => {\n      const element = document.getElementById(\"profile-cropper\");\n\n      const cropper = new Croppie(element, {\n        enableZoom: true,\n        enableResize: false,\n        enableOrientation: false,\n        viewport: {\n          type: \"square\",\n          width: 150,\n          height: this.type === \"photo\" ? 150 : 73,\n        },\n      });\n\n      cropper\n        .bind({\n          url: `data:${this.file.mimeType};base64,${this.file.data}`,\n          orientation: 1,\n        })\n        .then(() => (this.finish = true));\n\n      this.cropper = cropper;\n      const bundary: HTMLElement = document.querySelector(\n        \".croppie-container .cr-boundary\"\n      );\n\n      if (bundary) {\n        bundary.classList.remove(this.type === \"photo\" ? \"cover\" : \"photo\");\n        bundary.classList.add(this.type);\n      }\n    });\n\n    this.subscriptions.push(sub);\n  }\n\n  private unsubscribe() {\n    this.subscriptions.forEach((sub) => sub.unsubscribe());\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}