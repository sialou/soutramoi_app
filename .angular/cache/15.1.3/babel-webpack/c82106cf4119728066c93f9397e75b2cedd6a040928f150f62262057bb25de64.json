{"ast":null,"code":"import { __awaiter, __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./profile.page.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./profile.page.scss?ngResource\";\nimport { Component, ViewChild, ViewChildren } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, from } from 'rxjs';\nimport { fadeTransition, pageTransition } from 'src/app/animations';\nimport { AlertService } from 'src/app/services/alert.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { AppService } from 'src/app/services/app.service';\nimport { HttpService } from 'src/app/services/http.service';\nimport { LoaderService } from 'src/app/services/loader.service';\nimport { NetworkService, NetworkState } from 'src/app/services/network.service';\nimport { SwitchComponent } from 'src/app/shared/switch/switch.component';\nimport { ProfileCardItemComponent } from './components/profile-card-item.component';\nimport { TabsService } from 'src/app/services/tabs.service';\nlet ProfilePage = class ProfilePage {\n  constructor(router, app, alert, loader, auth, http, network, tabs) {\n    this.router = router;\n    this.app = app;\n    this.alert = alert;\n    this.loader = loader;\n    this.auth = auth;\n    this.http = http;\n    this.network = network;\n    this.tabs = tabs;\n    this.subscribeModal = false;\n    this.state = new BehaviorSubject('loading');\n    this.defaultFailMessage = 'Une erreur est survenue lors de la récupération des données.';\n    this.failMessage = this.defaultFailMessage;\n    this.user = null;\n    this.locations = [];\n    this.cityOptions = [];\n    this.townOptions = [];\n    this.subscriptions = [];\n    this.form = {\n      name: new FormControl(null, [Validators.required, Validators.minLength(3)]),\n      email: new FormControl(null, [Validators.required, Validators.email]),\n      phone: new FormControl(null, [Validators.pattern(/^[0-9]{10}$/)]),\n      city: new FormControl(null, [Validators.required]),\n      town: new FormControl(null, [Validators.required]),\n      gender: new FormControl(null, [Validators.required])\n    };\n  }\n  ionViewDidEnter() {\n    this.initialize();\n    this.state.next('loading');\n    if (this.network.is('online')) {\n      this.loadData();\n    } else {\n      this.state.next('offline');\n      const sub = this.network.listen().subscribe(state => {\n        if (state === NetworkState.on) {\n          this.loadData();\n          sub.unsubscribe();\n        }\n      });\n      this.subscriptions.push(sub);\n    }\n  }\n  ionViewDidLeave() {\n    this.subscriptions.forEach(i => i.unsubscribe());\n  }\n  initialize() {\n    const sub = this.state.asObservable().subscribe(state => {\n      if (state === 'ready' && !this.user.city) {\n        this.alert.present({\n          title: 'Profil incomplet',\n          text: 'Veuillez renseigner votre ville et votre quartier.',\n          confirmButtonText: 'Renseigner'\n        }).then(result => {\n          if (result.isConfirmed) {\n            const element = document.querySelector('#locations-anchor');\n            if (element) {\n              element.scrollIntoView({\n                behavior: 'smooth',\n                block: 'end'\n              });\n            }\n          }\n        });\n      }\n    });\n    this.subscriptions.push(sub);\n  }\n  photoChange(user) {\n    this.user = user;\n    this.auth.setUser(user);\n  }\n  genderChange(gender) {\n    this.alert.present({\n      text: 'Vous confirmez la modification ?',\n      showCancelButton: true,\n      cancelButtonText: 'Annuler',\n      confirmButtonText: 'Modifier'\n    }).then(result => {\n      if (result.isConfirmed) {\n        this.loader.present('Mofication en cours...');\n        const {\n          id_token\n        } = this.user;\n        const sub = from(this.http.post('/me/profile', {\n          gender,\n          id_token\n        })).subscribe({\n          next: user => {\n            this.form.gender.setValue(user.gender);\n            this.user.gender = user.gender;\n            this.auth.setUser(user);\n            this.loader.dismiss();\n          },\n          error: err => {\n            this.app.handlingError(err);\n            this.genderSwitch.restore();\n          }\n        });\n        this.subscriptions.push(sub);\n      } else {\n        this.genderSwitch.restore();\n      }\n    });\n  }\n  passwordChange(user) {\n    this.user = user;\n    this.auth.setUser(user);\n  }\n  valueChange(slug, value) {\n    const field = this.cardItems.find(i => i.slug === slug);\n    field.state.next('loading');\n    const sub = from(this.submit(slug, value)).subscribe({\n      next: () => {\n        this.sync(slug, value);\n        field.done(value);\n        setTimeout(() => field.state.next('initial'), 1500);\n      },\n      error: err => {\n        field.state.next('error');\n        field.input.setValue(field.value);\n        this.app.handlingError(err);\n        setTimeout(() => field.state.next('initial'), 1500);\n      }\n    });\n    this.subscriptions.push(sub);\n  }\n  submit(name, value) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const {\n        id_token\n      } = yield this.auth.getUser();\n      const body = {\n        id_token\n      };\n      if (['name', 'town', 'city'].includes(name)) {\n        if (name === 'name') {\n          body.name = value;\n        } else if (name === 'city') {\n          const towns = this.locations.filter(i => i.parent_id === value);\n          body.town_id = towns.length > 0 ? towns[0].id : value;\n          body.city_id = value;\n        } else if (name === 'town') {\n          body.town_id = value;\n        }\n        return this.http.post('/me/profile', body);\n      } else if (name === 'phone') {\n        body.phone = String(value).trim();\n        return this.http.post('/me/phone', body);\n      } else if (name === 'email') {\n        body.email = String(value).trim().toLowerCase();\n        return this.http.post('/me/email', body);\n      }\n    });\n  }\n  sync(name, value) {\n    const user = Object.assign({}, this.user);\n    if (['town', 'city'].includes(name)) {\n      value = Number(value);\n      if (name === 'city') {\n        user.city = this.cityOptions.find(i => i.id === value);\n        this.townOptions = this.locations.filter(i => i.parent_id === value);\n        if (this.townOptions.length === 0) {\n          this.townOptions = [user.city];\n          user.town = user.city;\n        } else {\n          user.town = this.townOptions[0];\n        }\n        this.form.town.setValue(user.town.id);\n      } else {\n        user.town = this.locations.find(i => i.id === value);\n      }\n    } else if (name === 'email') {\n      user.email = String(value).trim().toLowerCase();\n    } else {\n      user[name] = String(value).trim();\n    }\n    this.user = user;\n    this.auth.setUser(this.user);\n  }\n  logout() {\n    this.alert.present({\n      title: 'Déconnexion',\n      text: 'Voulez-vous vraiment vous déconnecter ?',\n      confirmButtonText: 'Se déconnecter',\n      cancelButtonText: 'Annuler',\n      showCancelButton: true\n    }).then(res => __awaiter(this, void 0, void 0, function* () {\n      if (res.isConfirmed) {\n        yield this.auth.logout();\n        yield this.router.navigate(['/tabs/home']);\n      }\n    }));\n  }\n  reload() {\n    this.state.next('loading');\n    this.loadData();\n  }\n  promptSubscribe() {\n    this.tabs.dissmiss();\n    this.subscribeModal = true;\n  }\n  confirmSubscribe() {\n    this.subscribeModal = false;\n    this.tabs.present();\n    setTimeout(() => this.router.navigate(['/profile/pro']), 300);\n  }\n  cancelSubscribe() {\n    this.subscribeModal = false;\n    this.tabs.present();\n  }\n  locationsToSelectOptions(items) {\n    const stack = items.map(i => ({\n      name: i.name,\n      value: i.id\n    }));\n    return stack.sort((a, b) => a.name - b.name);\n  }\n  loadData() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const request = yield this.auth.me();\n      const sub = request.subscribe({\n        next: user => {\n          this.auth.setUser(user);\n          this.user = user;\n          this.loadLoacations();\n        },\n        error: err => {\n          this.failMessage = this.app.handlingError(err, false);\n          this.state.next('failed');\n        }\n      });\n      this.subscriptions.push(sub);\n    });\n  }\n  loadLoacations() {\n    const sub = from(this.http.get('/locations')).subscribe({\n      next: locations => {\n        if (this.user.city) {\n          const {\n            city\n          } = this.user;\n          const towns = [...locations].filter(i => i.parent_id === city.id);\n          this.townOptions = towns.length > 0 ? towns : [city];\n        } else {\n          this.townOptions = [];\n        }\n        this.cityOptions = [...locations].filter(i => i.parent_id === null);\n        this.locations = locations;\n        this.state.next('ready');\n      },\n      error: err => {\n        this.failMessage = this.app.handlingError(err, false);\n        this.state.next('failed');\n      }\n    });\n    this.subscriptions.push(sub);\n  }\n};\nProfilePage.ctorParameters = () => [{\n  type: Router\n}, {\n  type: AppService\n}, {\n  type: AlertService\n}, {\n  type: LoaderService\n}, {\n  type: AuthService\n}, {\n  type: HttpService\n}, {\n  type: NetworkService\n}, {\n  type: TabsService\n}];\nProfilePage.propDecorators = {\n  cardItems: [{\n    type: ViewChildren,\n    args: [ProfileCardItemComponent]\n  }],\n  genderSwitch: [{\n    type: ViewChild,\n    args: [SwitchComponent]\n  }]\n};\nProfilePage = __decorate([Component({\n  selector: 'tab-profile',\n  template: __NG_CLI_RESOURCE__0,\n  animations: [fadeTransition, pageTransition],\n  styles: [__NG_CLI_RESOURCE__1]\n})], ProfilePage);\nexport { ProfilePage };","map":{"version":3,"mappings":"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","names":["Component","ViewChild","ViewChildren","FormControl","Validators","Router","BehaviorSubject","from","fadeTransition","pageTransition","AlertService","AuthService","AppService","HttpService","LoaderService","NetworkService","NetworkState","SwitchComponent","ProfileCardItemComponent","TabsService","ProfilePage","constructor","router","app","alert","loader","auth","http","network","tabs","defaultFailMessage","form","name","required","minLength","email","phone","pattern","city","town","gender","ionViewDidEnter","initialize","state","next","is","loadData","sub","listen","subscribe","on","unsubscribe","subscriptions","push","ionViewDidLeave","forEach","i","asObservable","user","present","title","text","confirmButtonText","then","result","isConfirmed","element","document","querySelector","scrollIntoView","behavior","block","photoChange","setUser","genderChange","showCancelButton","cancelButtonText","id_token","post","setValue","dismiss","error","err","handlingError","genderSwitch","restore","passwordChange","valueChange","slug","value","field","cardItems","find","submit","sync","done","setTimeout","input","getUser","body","includes","towns","locations","filter","parent_id","town_id","length","id","city_id","String","trim","toLowerCase","Number","cityOptions","townOptions","logout","res","__awaiter","navigate","reload","promptSubscribe","dissmiss","subscribeModal","confirmSubscribe","cancelSubscribe","locationsToSelectOptions","items","stack","map","sort","a","b","request","me","loadLoacations","failMessage","get","args","selector","template","animations"],"sourceRoot":"","sources":["/home/digifemmes-22lab149/Bureau/soutramoi_app/src/app/pages/tabs/profile/profile.page.ts"],"sourcesContent":["import { Component, QueryList, ViewChild, ViewChildren } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, from, Subscription } from 'rxjs';\n\nimport { fadeTransition, pageTransition } from 'src/app/animations';\nimport { AlertService } from 'src/app/services/alert.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { AppService } from 'src/app/services/app.service';\nimport { HttpService } from 'src/app/services/http.service';\nimport { LoaderService } from 'src/app/services/loader.service';\nimport { NetworkService, NetworkState } from 'src/app/services/network.service';\n\nimport { SwitchComponent } from 'src/app/shared/switch/switch.component';\nimport { ProfileCardItemComponent } from './components/profile-card-item.component';\nimport { TabsService } from 'src/app/services/tabs.service';\n\n@Component({\n  selector: 'tab-profile',\n  templateUrl: 'profile.page.html',\n  styleUrls: ['profile.page.scss'],\n  animations: [fadeTransition, pageTransition],\n})\nexport class ProfilePage {\n  @ViewChildren(ProfileCardItemComponent) cardItems!: QueryList<ProfileCardItemComponent>;\n  @ViewChild(SwitchComponent) genderSwitch: SwitchComponent;\n\n  subscribeModal = false;\n  state = new BehaviorSubject<PageState>('loading');\n  defaultFailMessage = 'Une erreur est survenue lors de la récupération des données.';\n  failMessage = this.defaultFailMessage;\n\n  user: User = null;\n  locations: AppLocation[] = [];\n  cityOptions: AppLocation[] = [];\n  townOptions: AppLocation[] = [];\n\n  form: {\n    name: FormControl;\n    email: FormControl;\n    phone: FormControl;\n    city: FormControl;\n    town: FormControl;\n    gender: FormControl;\n  };\n\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    private router: Router,\n    private app: AppService,\n    private alert: AlertService,\n    private loader: LoaderService,\n    private auth: AuthService,\n    private http: HttpService,\n    private network: NetworkService,\n    private tabs: TabsService,\n  ) {\n    this.form = {\n      name: new FormControl(null, [\n        Validators.required,\n        Validators.minLength(3),\n      ]),\n      email: new FormControl(null, [\n        Validators.required,\n        Validators.email,\n      ]),\n      phone: new FormControl(null, [\n        Validators.pattern(/^[0-9]{10}$/),\n      ]),\n      city: new FormControl(null, [\n        Validators.required,\n      ]),\n      town: new FormControl(null, [\n        Validators.required,\n      ]),\n      gender: new FormControl(null, [\n        Validators.required,\n      ]),\n    };\n  }\n\n  ionViewDidEnter() {\n    this.initialize();\n\n    this.state.next('loading');\n\n    if (this.network.is('online')) {\n      this.loadData();\n    } else {\n      this.state.next('offline');\n\n      const sub = this.network.listen().subscribe(state => {\n        if (state === NetworkState.on) {\n          this.loadData();\n          sub.unsubscribe();\n        }\n      });\n\n      this.subscriptions.push(sub);\n    }\n  }\n\n  ionViewDidLeave() {\n    this.subscriptions.forEach(i => i.unsubscribe());\n  }\n\n  initialize() {\n    const sub = this.state.asObservable().subscribe(state => {\n      if (state === 'ready' && !this.user.city) {\n        this.alert.present({\n          title: 'Profil incomplet',\n          text: 'Veuillez renseigner votre ville et votre quartier.',\n          confirmButtonText: 'Renseigner',\n        }).then(result => {\n          if (result.isConfirmed) {\n            const element = document.querySelector('#locations-anchor');\n\n            if (element) {\n              element.scrollIntoView({ behavior: 'smooth', block: 'end' });\n            }\n          }\n        });\n      }\n    });\n\n    this.subscriptions.push(sub);\n  }\n\n  photoChange(user: User) {\n    this.user = user;\n    this.auth.setUser(user);\n  }\n\n  genderChange(gender: Gender) {\n    this.alert.present({\n      text: 'Vous confirmez la modification ?',\n      showCancelButton: true,\n      cancelButtonText: 'Annuler',\n      confirmButtonText: 'Modifier'\n    }).then(result => {\n      if (result.isConfirmed) {\n        this.loader.present('Mofication en cours...');\n\n        const { id_token } = this.user;\n        const sub = from(this.http.post('/me/profile', { gender, id_token })).subscribe({\n          next: (user: User) => {\n            this.form.gender.setValue(user.gender);\n            this.user.gender = user.gender;\n            this.auth.setUser(user);\n            this.loader.dismiss();\n          },\n          error: (err) => {\n            this.app.handlingError(err);\n            this.genderSwitch.restore();\n          }\n        });\n\n        this.subscriptions.push(sub);\n      } else {\n        this.genderSwitch.restore();\n      }\n    });\n  }\n\n  passwordChange(user: User) {\n    this.user = user;\n    this.auth.setUser(user);\n  }\n\n  valueChange(slug: string, value: any) {\n    const field = this.cardItems.find(i => i.slug === slug);\n\n    field.state.next('loading');\n\n    const sub = from(this.submit(slug, value)).subscribe({\n      next: () => {\n        this.sync(slug, value);\n        field.done(value);\n        setTimeout(() => field.state.next('initial'), 1500);\n      },\n      error: (err) => {\n        field.state.next('error');\n        field.input.setValue(field.value);\n        this.app.handlingError(err);\n        setTimeout(() => field.state.next('initial'), 1500);\n      }\n    });\n\n    this.subscriptions.push(sub);\n  }\n\n  async submit(name: string, value: any) {\n    const { id_token } = await this.auth.getUser();\n    const body: any = { id_token };\n\n    if (['name', 'town', 'city'].includes(name)) {\n      if (name === 'name') {\n        body.name = value;\n      } else if (name === 'city') {\n        const towns = this.locations.filter(i => i.parent_id === value);\n\n        body.town_id = towns.length > 0 ? towns[0].id : value;\n        body.city_id = value;\n      } else if (name === 'town') {\n        body.town_id = value;\n      }\n\n      return this.http.post('/me/profile', body);\n    } else if (name === 'phone') {\n      body.phone = String(value).trim();\n      return this.http.post('/me/phone', body);\n    } else if (name === 'email') {\n      body.email = String(value).trim().toLowerCase();\n      return this.http.post('/me/email', body);\n    }\n  }\n\n  sync(name: string, value: any) {\n    const user: User = { ...this.user };\n\n    if (['town', 'city'].includes(name)) {\n      value = Number(value);\n\n      if (name === 'city') {\n        user.city = this.cityOptions.find(i => i.id === value);\n        this.townOptions = this.locations.filter(i => i.parent_id === value);\n\n        if (this.townOptions.length === 0) {\n          this.townOptions = [user.city];\n          user.town = user.city;\n        } else {\n          user.town = this.townOptions[0];\n        }\n\n        this.form.town.setValue(user.town.id);\n      } else {\n        user.town = this.locations.find(i => i.id === value);\n      }\n    } else if (name === 'email') {\n      user.email = String(value).trim().toLowerCase();\n    } else {\n      user[name] = String(value).trim();\n    }\n\n    this.user = user;\n    this.auth.setUser(this.user);\n  }\n\n  logout() {\n    this.alert.present({\n      title: 'Déconnexion',\n      text: 'Voulez-vous vraiment vous déconnecter ?',\n      confirmButtonText: 'Se déconnecter',\n      cancelButtonText: 'Annuler',\n      showCancelButton: true,\n    }).then(async res => {\n      if (res.isConfirmed) {\n        await this.auth.logout();\n        await this.router.navigate(['/tabs/home']);\n      }\n    });\n  }\n\n  reload() {\n    this.state.next('loading');\n    this.loadData();\n  }\n\n  promptSubscribe() {\n    this.tabs.dissmiss();\n    this.subscribeModal = true;\n  }\n\n  confirmSubscribe() {\n    this.subscribeModal = false;\n    this.tabs.present();\n\n    setTimeout(() => this.router.navigate(['/profile/pro']), 300);\n  }\n\n  cancelSubscribe() {\n    this.subscribeModal = false;\n    this.tabs.present();\n  }\n\n  locationsToSelectOptions(items: AppLocation[]) {\n    const stack = items.map(i => ({ name: i.name, value: i.id }));\n    return stack.sort((a: any, b: any) => a.name - b.name);\n  }\n\n  private async loadData() {\n    const request = await this.auth.me();\n    const sub = request.subscribe({\n      next: (user: User) => {\n        this.auth.setUser(user);\n        this.user = user;\n        this.loadLoacations();\n      },\n      error: (err) => {\n        this.failMessage = this.app.handlingError(err, false);\n        this.state.next('failed');\n      }\n    });\n\n    this.subscriptions.push(sub);\n  }\n\n  private loadLoacations() {\n    const sub = from(this.http.get('/locations')).subscribe({\n      next: (locations: AppLocation[]) => {\n        if (this.user.city) {\n          const { city } = this.user;\n          const towns = [...locations].filter(i => i.parent_id === city.id);\n          this.townOptions = towns.length > 0 ? towns : [city];\n        } else {\n          this.townOptions = [];\n        }\n\n        this.cityOptions = [...locations].filter(i => i.parent_id === null);\n        this.locations = locations;\n        this.state.next('ready');\n      },\n      error: (err) => {\n        this.failMessage = this.app.handlingError(err, false);\n        this.state.next('failed');\n      }\n    });\n\n    this.subscriptions.push(sub);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}